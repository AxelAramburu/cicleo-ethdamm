/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  LibBridgeCaller,
  LibBridgeCallerInterface,
} from "../../../contracts/libraries/LibBridgeCaller";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentManagerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "IERC20",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "getPaymentDestinationCalldata",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61078a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063675a61ce1461003a575b600080fd5b610054600480360381019061004f91906102bc565b61006a565b6040516100619190610495565b60405180910390f35b606060006309ac248e60e01b90508085858560405160240161008e939291906104b7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150509392505050565b600061010861010384610521565b6104fc565b905082815260208101848484011115610124576101236106ef565b5b61012f84828561063e565b509392505050565b600061014a61014584610552565b6104fc565b905082815260208101848484011115610166576101656106ef565b5b61017184828561063e565b509392505050565b6000813590506101888161070f565b92915050565b600082601f8301126101a3576101a26106e0565b5b81356101b38482602086016100f5565b91505092915050565b6000813590506101cb81610726565b92915050565b600082601f8301126101e6576101e56106e0565b5b81356101f6848260208601610137565b91505092915050565b600060a08284031215610215576102146106e5565b5b61021f60a06104fc565b9050600061022f848285016102a7565b6000830152506020610243848285016102a7565b6020830152506040610257848285016102a7565b604083015250606082013567ffffffffffffffff81111561027b5761027a6106ea565b5b610287848285016101d1565b606083015250608061029b848285016101bc565b60808301525092915050565b6000813590506102b68161073d565b92915050565b6000806000606084860312156102d5576102d46106f9565b5b600084013567ffffffffffffffff8111156102f3576102f26106f4565b5b6102ff868287016101ff565b935050602061031086828701610179565b925050604084013567ffffffffffffffff811115610331576103306106f4565b5b61033d8682870161018e565b9150509250925092565b610350816105cc565b82525050565b600061036182610583565b61036b8185610599565b935061037b81856020860161064d565b610384816106fe565b840191505092915050565b600061039a82610583565b6103a481856105aa565b93506103b481856020860161064d565b6103bd816106fe565b840191505092915050565b6103d18161061a565b82525050565b60006103e28261058e565b6103ec81856105bb565b93506103fc81856020860161064d565b610405816106fe565b840191505092915050565b600060a0830160008301516104286000860182610486565b50602083015161043b6020860182610486565b50604083015161044e6040860182610486565b506060830151848203606086015261046682826103d7565b915050608083015161047b60808601826103c8565b508091505092915050565b61048f81610610565b82525050565b600060208201905081810360008301526104af818461038f565b905092915050565b600060608201905081810360008301526104d18186610410565b90506104e06020830185610347565b81810360408301526104f28184610356565b9050949350505050565b6000610506610517565b90506105128282610680565b919050565b6000604051905090565b600067ffffffffffffffff82111561053c5761053b6106b1565b5b610545826106fe565b9050602081019050919050565b600067ffffffffffffffff82111561056d5761056c6106b1565b5b610576826106fe565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006105d7826105f0565b9050919050565b60006105e9826105cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106258261062c565b9050919050565b6000610637826105f0565b9050919050565b82818337600083830152505050565b60005b8381101561066b578082015181840152602081019050610650565b8381111561067a576000848401525b50505050565b610689826106fe565b810181811067ffffffffffffffff821117156106a8576106a76106b1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610718816105cc565b811461072357600080fd5b50565b61072f816105de565b811461073a57600080fd5b50565b61074681610610565b811461075157600080fd5b5056fea2646970667358221220b9640fea701b53a51109a6c211bb49a71955cd31bab7156cc4db45334a5eda8d64736f6c63430008060033";

type LibBridgeCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibBridgeCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibBridgeCaller__factory extends ContractFactory {
  constructor(...args: LibBridgeCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibBridgeCaller> {
    return super.deploy(overrides || {}) as Promise<LibBridgeCaller>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibBridgeCaller {
    return super.attach(address) as LibBridgeCaller;
  }
  override connect(signer: Signer): LibBridgeCaller__factory {
    return super.connect(signer) as LibBridgeCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibBridgeCallerInterface {
    return new utils.Interface(_abi) as LibBridgeCallerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibBridgeCaller {
    return new Contract(address, _abi, signerOrProvider) as LibBridgeCaller;
  }
}
