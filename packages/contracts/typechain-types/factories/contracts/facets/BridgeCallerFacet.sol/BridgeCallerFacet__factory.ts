/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BridgeCallerFacet,
  BridgeCallerFacetInterface,
} from "../../../../contracts/facets/BridgeCallerFacet.sol/BridgeCallerFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "PaymentBridged",
    type: "event",
  },
  {
    inputs: [],
    name: "lifi",
    outputs: [
      {
        internalType: "contract ILiFiDiamond",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentManagerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "payWithCicleoWithBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052731231deb6f5749ef6ce6943a275a1d3e7486f4eae6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50611de0806100746000396000f3fe6080604052600436106100295760003560e01c80630cdba1221461002e57806346d1cc221461004a575b600080fd5b61004860048036038101906100439190610e3e565b610075565b005b34801561005657600080fd5b5061005f610155565b60405161006c91906116d4565b60405180910390f35b61007d610179565b8760000181815250506100da873384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508660c00151610186565b8360c001819052506100f08733888888886101a6565b86604001513373ffffffffffffffffffffffffffffffffffffffff1688602001517f34b0fdd9d953b6aa6d5c5b45ac1815e58cd0223ac531a961758360a9d4c3d26a8a6060015160405161014491906116ef565b60405180910390a450505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000804690508091505090565b606061019c826101978787876105e4565b61066f565b9050949350505050565b6000866080015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e59190611659565b60206040518083038186803b1580156101fd57600080fd5b505afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102359190610f4e565b9050866080015173ffffffffffffffffffffffffffffffffffffffff166323b872dd87308860c001516040518463ffffffff1660e01b815260040161027c93929190611674565b602060405180830381600087803b15801561029657600080fd5b505af11580156102aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ce9190610e11565b508460c0015181886080015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103129190611659565b60206040518083038186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190610f4e565b61036c9190611a94565b10156103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490611711565b60405180910390fd5b866080015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760c001516040518363ffffffff1660e01b81526004016104109291906116ab565b602060405180830381600087803b15801561042a57600080fd5b505af115801561043e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104629190610e11565b50816060015134146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a090611731565b60405180910390fd5b600084849050111561054c5760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7556c1e34878787876040518663ffffffff1660e01b81526004016105159493929190611751565b6000604051808303818588803b15801561052e57600080fd5b505af1158015610542573d6000803e3d6000fd5b50505050506105db565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633b00e8073487856040518463ffffffff1660e01b81526004016105a892919061179f565b6000604051808303818588803b1580156105c157600080fd5b505af11580156105d5573d6000803e3d6000fd5b50505050505b50505050505050565b606060006309ac248e60e01b905080858585604051602401610608939291906117d6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150509392505050565b60606000806000808680602001905181019061068b9190610f7b565b93509350935093508583600185516106a39190611a94565b815181106106b4576106b3611c28565b5b602002602001015160a00181905250838383836040516020016106da949392919061181b565b60405160208183030381529060405294505050505092915050565b60006107086107038461188c565b611867565b9050808382526020820190508285602086028201111561072b5761072a611ca4565b5b60005b8581101561077957815167ffffffffffffffff81111561075157610750611c90565b5b80860161075e8982610d17565b8552602085019450602084019350505060018101905061072e565b5050509392505050565b6000610796610791846118b8565b611867565b9050828152602081018484840111156107b2576107b1611ca9565b5b6107bd848285611b86565b509392505050565b60006107d86107d3846118b8565b611867565b9050828152602081018484840111156107f4576107f3611ca9565b5b6107ff848285611b95565b509392505050565b600061081a610815846118e9565b611867565b90508281526020810184848401111561083657610835611ca9565b5b610841848285611b86565b509392505050565b60008135905061085881611d20565b92915050565b60008151905061086d81611d20565b92915050565b60008135905061088281611d37565b92915050565b60008151905061089781611d37565b92915050565b60008083601f8401126108b3576108b2611c90565b5b8235905067ffffffffffffffff8111156108d0576108cf611c8b565b5b6020830191508360208202830111156108ec576108eb611ca4565b5b9250929050565b600082601f83011261090857610907611c90565b5b81516109188482602086016106f5565b91505092915050565b60008135905061093081611d4e565b92915050565b60008151905061094581611d4e565b92915050565b60008135905061095a81611d65565b92915050565b60008083601f84011261097657610975611c90565b5b8235905067ffffffffffffffff81111561099357610992611c8b565b5b6020830191508360018202830111156109af576109ae611ca4565b5b9250929050565b600082601f8301126109cb576109ca611c90565b5b81356109db848260208601610783565b91505092915050565b600082601f8301126109f9576109f8611c90565b5b8151610a098482602086016107c5565b91505092915050565b600081359050610a2181611d7c565b92915050565b600082601f830112610a3c57610a3b611c90565b5b8135610a4c848260208601610807565b91505092915050565b60006101408284031215610a6c57610a6b611c95565b5b610a77610140611867565b90506000610a878482850161094b565b600083015250602082013567ffffffffffffffff811115610aab57610aaa611c9f565b5b610ab784828501610a27565b602083015250604082013567ffffffffffffffff811115610adb57610ada611c9f565b5b610ae784828501610a27565b6040830152506060610afb84828501610849565b6060830152506080610b0f84828501610849565b60808301525060a0610b2384828501610849565b60a08301525060c0610b3784828501610de7565b60c08301525060e0610b4b84828501610de7565b60e083015250610100610b6084828501610921565b61010083015250610120610b7684828501610921565b6101208301525092915050565b600060a08284031215610b9957610b98611c95565b5b610ba360a0611867565b90506000610bb384828501610de7565b6000830152506020610bc784828501610de7565b6020830152506040610bdb84828501610de7565b604083015250606082013567ffffffffffffffff811115610bff57610bfe611c9f565b5b610c0b84828501610a27565b6060830152506080610c1f84828501610a12565b60808301525092915050565b600060e08284031215610c4157610c40611c95565b5b610c4b60e0611867565b90506000610c5b84828501610de7565b6000830152506020610c6f84828501610de7565b6020830152506040610c8384828501610de7565b6040830152506060610c9784828501610de7565b6060830152506080610cab84828501610873565b60808301525060a082013567ffffffffffffffff811115610ccf57610cce611c9f565b5b610cdb848285016109b6565b60a08301525060c082013567ffffffffffffffff811115610cff57610cfe611c9f565b5b610d0b848285016109b6565b60c08301525092915050565b600060e08284031215610d2d57610d2c611c95565b5b610d3760e0611867565b90506000610d478482850161085e565b6000830152506020610d5b8482850161085e565b6020830152506040610d6f8482850161085e565b6040830152506060610d838482850161085e565b6060830152506080610d9784828501610dfc565b60808301525060a082015167ffffffffffffffff811115610dbb57610dba611c9f565b5b610dc7848285016109e4565b60a08301525060c0610ddb84828501610936565b60c08301525092915050565b600081359050610df681611d93565b92915050565b600081519050610e0b81611d93565b92915050565b600060208284031215610e2757610e26611cb8565b5b6000610e3584828501610936565b91505092915050565b600080600080600080600060a0888a031215610e5d57610e5c611cb8565b5b600088013567ffffffffffffffff811115610e7b57610e7a611cae565b5b610e878a828b01610b83565b975050602088013567ffffffffffffffff811115610ea857610ea7611cae565b5b610eb48a828b01610a55565b965050604088013567ffffffffffffffff811115610ed557610ed4611cae565b5b610ee18a828b0161089d565b9550955050606088013567ffffffffffffffff811115610f0457610f03611cae565b5b610f108a828b01610c2b565b935050608088013567ffffffffffffffff811115610f3157610f30611cae565b5b610f3d8a828b01610960565b925092505092959891949750929550565b600060208284031215610f6457610f63611cb8565b5b6000610f7284828501610dfc565b91505092915050565b60008060008060808587031215610f9557610f94611cb8565b5b6000610fa387828801610dfc565b945050602085015167ffffffffffffffff811115610fc457610fc3611cae565b5b610fd0878288016108f3565b9350506040610fe187828801610888565b9250506060610ff287828801610888565b91505092959194509250565b600061100a83836114c9565b905092915050565b600061101e838361159f565b905092915050565b61102f81611ada565b82525050565b61103e81611ac8565b82525050565b61104d81611ac8565b82525050565b600061105f838561196f565b9350836020840285016110718461191a565b8060005b878110156110b557848403895261108c8284611a55565b6110968582610ffe565b94506110a183611955565b925060208a01995050600181019050611075565b50829750879450505050509392505050565b60006110d282611934565b6110dc818561196f565b9350836020820285016110ee85611924565b8060005b8581101561112a578484038952815161110b8582611012565b945061111683611962565b925060208a019950506001810190506110f2565b50829750879550505050505092915050565b61114581611aec565b82525050565b61115481611af8565b82525050565b60006111668385611980565b9350611173838584611b86565b61117c83611cbd565b840190509392505050565b60006111928261193f565b61119c8185611980565b93506111ac818560208601611b95565b6111b581611cbd565b840191505092915050565b60006111cb8261193f565b6111d58185611991565b93506111e5818560208601611b95565b6111ee81611cbd565b840191505092915050565b61120281611b3e565b82525050565b61121181611b62565b82525050565b60006112228261194a565b61122c81856119a2565b935061123c818560208601611b95565b61124581611cbd565b840191505092915050565b600061125b8261194a565b61126581856119b3565b9350611275818560208601611b95565b61127e81611cbd565b840191505092915050565b6000611296600f836119b3565b91506112a182611cce565b602082019050919050565b60006112b9600f836119b3565b91506112c482611cf7565b602082019050919050565b6000610140830160008301516112e8600086018261114b565b50602083015184820360208601526113008282611217565b9150506040830151848203604086015261131a8282611217565b915050606083015161132f6060860182611035565b5060808301516113426080860182611035565b5060a083015161135560a0860182611035565b5060c083015161136860c086018261163b565b5060e083015161137b60e086018261163b565b5061010083015161139061010086018261113c565b506101208301516113a561012086018261113c565b508091505092915050565b600060a0830160008301516113c8600086018261163b565b5060208301516113db602086018261163b565b5060408301516113ee604086018261163b565b50606083015184820360608601526114068282611217565b915050608083015161141b60808601826111f9565b508091505092915050565b600060e08301600083015161143e600086018261163b565b506020830151611451602086018261163b565b506040830151611464604086018261163b565b506060830151611477606086018261163b565b50608083015161148a6080860182611026565b5060a083015184820360a08601526114a28282611187565b91505060c083015184820360c08601526114bc8282611187565b9150508091505092915050565b600060e083016114dc60008401846119c4565b6114e96000860182611035565b506114f760208401846119c4565b6115046020860182611035565b5061151260408401846119c4565b61151f6040860182611035565b5061152d60608401846119c4565b61153a6060860182611035565b506115486080840184611a7d565b611555608086018261163b565b5061156360a08401846119f2565b85830360a087015261157683828461115a565b9250505061158760c08401846119db565b61159460c086018261113c565b508091505092915050565b600060e0830160008301516115b76000860182611035565b5060208301516115ca6020860182611035565b5060408301516115dd6040860182611035565b5060608301516115f06060860182611035565b506080830151611603608086018261163b565b5060a083015184820360a086015261161b8282611187565b91505060c083015161163060c086018261113c565b508091505092915050565b61164481611b34565b82525050565b61165381611b34565b82525050565b600060208201905061166e6000830184611044565b92915050565b60006060820190506116896000830186611044565b6116966020830185611044565b6116a3604083018461164a565b949350505050565b60006040820190506116c06000830185611044565b6116cd602083018461164a565b9392505050565b60006020820190506116e96000830184611208565b92915050565b600060208201905081810360008301526117098184611250565b905092915050565b6000602082019050818103600083015261172a81611289565b9050919050565b6000602082019050818103600083015261174a816112ac565b9050919050565b6000606082019050818103600083015261176b81876112cf565b90508181036020830152611780818587611053565b905081810360408301526117948184611426565b905095945050505050565b600060408201905081810360008301526117b981856112cf565b905081810360208301526117cd8184611426565b90509392505050565b600060608201905081810360008301526117f081866113b0565b90506117ff6020830185611044565b818103604083015261181181846111c0565b9050949350505050565b6000608082019050611830600083018761164a565b818103602083015261184281866110c7565b90506118516040830185611044565b61185e6060830184611044565b95945050505050565b6000611871611882565b905061187d8282611bc8565b919050565b6000604051905090565b600067ffffffffffffffff8211156118a7576118a6611c57565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156118d3576118d2611c57565b5b6118dc82611cbd565b9050602081019050919050565b600067ffffffffffffffff82111561190457611903611c57565b5b61190d82611cbd565b9050602081019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006119d36020840184610849565b905092915050565b60006119ea6020840184610921565b905092915050565b60008083356001602003843603038112611a0f57611a0e611cb3565b5b83810192508235915060208301925067ffffffffffffffff821115611a3757611a36611c86565b5b600182023603841315611a4d57611a4c611c9a565b5b509250929050565b60008235600160e003833603038112611a7157611a70611cb3565b5b82810191505092915050565b6000611a8c6020840184610de7565b905092915050565b6000611a9f82611b34565b9150611aaa83611b34565b925082821015611abd57611abc611bf9565b5b828203905092915050565b6000611ad382611b14565b9050919050565b6000611ae582611b14565b9050919050565b60008115159050919050565b6000819050919050565b6000611b0d82611ac8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b4982611b50565b9050919050565b6000611b5b82611b14565b9050919050565b6000611b6d82611b74565b9050919050565b6000611b7f82611b14565b9050919050565b82818337600083830152505050565b60005b83811015611bb3578082015181840152602081019050611b98565b83811115611bc2576000848401525b50505050565b611bd182611cbd565b810181811067ffffffffffffffff82111715611bf057611bef611c57565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4572726f72206d73672e76616c75650000000000000000000000000000000000600082015250565b611d2981611ac8565b8114611d3457600080fd5b50565b611d4081611ada565b8114611d4b57600080fd5b50565b611d5781611aec565b8114611d6257600080fd5b50565b611d6e81611af8565b8114611d7957600080fd5b50565b611d8581611b02565b8114611d9057600080fd5b50565b611d9c81611b34565b8114611da757600080fd5b5056fea2646970667358221220799da67faa4050eb207ec84bbabea9141d31c9dbd1572216d0d4ca9b07dba67664736f6c63430008060033";

type BridgeCallerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeCallerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeCallerFacet__factory extends ContractFactory {
  constructor(...args: BridgeCallerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeCallerFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeCallerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeCallerFacet {
    return super.attach(address) as BridgeCallerFacet;
  }
  override connect(signer: Signer): BridgeCallerFacet__factory {
    return super.connect(signer) as BridgeCallerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeCallerFacetInterface {
    return new utils.Interface(_abi) as BridgeCallerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeCallerFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeCallerFacet;
  }
}
