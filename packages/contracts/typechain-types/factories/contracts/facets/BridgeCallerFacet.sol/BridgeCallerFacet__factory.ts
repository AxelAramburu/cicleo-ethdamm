/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BridgeCallerFacet,
  BridgeCallerFacetInterface,
} from "../../../../contracts/facets/BridgeCallerFacet.sol/BridgeCallerFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "PaymentBridged",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentManagerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "transactionId",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "bridge",
            type: "string",
          },
          {
            internalType: "string",
            name: "integrator",
            type: "string",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "minAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "destinationChainId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasSourceSwaps",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasDestinationCall",
            type: "bool",
          },
        ],
        internalType: "struct ILiFi.BridgeData",
        name: "_bridgeData",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "callTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTo",
            type: "address",
          },
          {
            internalType: "address",
            name: "sendingAssetId",
            type: "address",
          },
          {
            internalType: "address",
            name: "receivingAssetId",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "fromAmount",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "requiresDeposit",
            type: "bool",
          },
        ],
        internalType: "struct LibSwap.SwapData[]",
        name: "_swapData",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "dstPoolId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minAmountLD",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dstGasForCall",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lzFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "refundAddress",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callTo",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct StargateData",
        name: "_stargateData",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "payWithCicleoWithBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cf2806100206000396000f3fe60806040526004361061001e5760003560e01c80630cdba12214610023575b600080fd5b61003d60048036038101906100389190610d9e565b61003f565b005b61004761011f565b8760000181815250506100a4873384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508660c0015161012c565b8360c001819052506100ba87338888888861014c565b86604001513373ffffffffffffffffffffffffffffffffffffffff1688602001517f34b0fdd9d953b6aa6d5c5b45ac1815e58cd0223ac531a961758360a9d4c3d26a8a6060015160405161010e9190611625565b60405180910390a450505050505050565b6000804690508091505090565b60606101428261013d878787610544565b6105cf565b9050949350505050565b6000866080015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161018b91906115aa565b60206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610eae565b90506000731231deb6f5749ef6ce6943a275a1d3e7486f4eae9050876080015173ffffffffffffffffffffffffffffffffffffffff166323b872dd88308960c001516040518463ffffffff1660e01b815260040161023b939291906115c5565b602060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028d9190610d71565b508560c0015182896080015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102d191906115aa565b60206040518083038186803b1580156102e957600080fd5b505afa1580156102fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103219190610eae565b61032b91906119ca565b101561036c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036390611647565b60405180910390fd5b876080015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3828860c001516040518363ffffffff1660e01b81526004016103af9291906115fc565b602060405180830381600087803b1580156103c957600080fd5b505af11580156103dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104019190610d71565b5082606001513414610448576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043f90611667565b60405180910390fd5b60008585905011156104cb578073ffffffffffffffffffffffffffffffffffffffff1663d7556c1e34888888886040518663ffffffff1660e01b81526004016104949493929190611687565b6000604051808303818588803b1580156104ad57600080fd5b505af11580156104c1573d6000803e3d6000fd5b505050505061053a565b8073ffffffffffffffffffffffffffffffffffffffff16633b00e8073488866040518463ffffffff1660e01b81526004016105079291906116d5565b6000604051808303818588803b15801561052057600080fd5b505af1158015610534573d6000803e3d6000fd5b50505050505b5050505050505050565b606060006309ac248e60e01b9050808585856040516024016105689392919061170c565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150509392505050565b6060600080600080868060200190518101906105eb9190610edb565b935093509350935085836001855161060391906119ca565b8151811061061457610613611b3a565b5b602002602001015160a001819052508383838360405160200161063a9493929190611751565b60405160208183030381529060405294505050505092915050565b6000610668610663846117c2565b61179d565b9050808382526020820190508285602086028201111561068b5761068a611bb6565b5b60005b858110156106d957815167ffffffffffffffff8111156106b1576106b0611ba2565b5b8086016106be8982610c77565b8552602085019450602084019350505060018101905061068e565b5050509392505050565b60006106f66106f1846117ee565b61179d565b90508281526020810184848401111561071257610711611bbb565b5b61071d848285611a98565b509392505050565b6000610738610733846117ee565b61179d565b90508281526020810184848401111561075457610753611bbb565b5b61075f848285611aa7565b509392505050565b600061077a6107758461181f565b61179d565b90508281526020810184848401111561079657610795611bbb565b5b6107a1848285611a98565b509392505050565b6000813590506107b881611c32565b92915050565b6000815190506107cd81611c32565b92915050565b6000813590506107e281611c49565b92915050565b6000815190506107f781611c49565b92915050565b60008083601f84011261081357610812611ba2565b5b8235905067ffffffffffffffff8111156108305761082f611b9d565b5b60208301915083602082028301111561084c5761084b611bb6565b5b9250929050565b600082601f83011261086857610867611ba2565b5b8151610878848260208601610655565b91505092915050565b60008135905061089081611c60565b92915050565b6000815190506108a581611c60565b92915050565b6000813590506108ba81611c77565b92915050565b60008083601f8401126108d6576108d5611ba2565b5b8235905067ffffffffffffffff8111156108f3576108f2611b9d565b5b60208301915083600182028301111561090f5761090e611bb6565b5b9250929050565b600082601f83011261092b5761092a611ba2565b5b813561093b8482602086016106e3565b91505092915050565b600082601f83011261095957610958611ba2565b5b8151610969848260208601610725565b91505092915050565b60008135905061098181611c8e565b92915050565b600082601f83011261099c5761099b611ba2565b5b81356109ac848260208601610767565b91505092915050565b600061014082840312156109cc576109cb611ba7565b5b6109d761014061179d565b905060006109e7848285016108ab565b600083015250602082013567ffffffffffffffff811115610a0b57610a0a611bb1565b5b610a1784828501610987565b602083015250604082013567ffffffffffffffff811115610a3b57610a3a611bb1565b5b610a4784828501610987565b6040830152506060610a5b848285016107a9565b6060830152506080610a6f848285016107a9565b60808301525060a0610a83848285016107a9565b60a08301525060c0610a9784828501610d47565b60c08301525060e0610aab84828501610d47565b60e083015250610100610ac084828501610881565b61010083015250610120610ad684828501610881565b6101208301525092915050565b600060a08284031215610af957610af8611ba7565b5b610b0360a061179d565b90506000610b1384828501610d47565b6000830152506020610b2784828501610d47565b6020830152506040610b3b84828501610d47565b604083015250606082013567ffffffffffffffff811115610b5f57610b5e611bb1565b5b610b6b84828501610987565b6060830152506080610b7f84828501610972565b60808301525092915050565b600060e08284031215610ba157610ba0611ba7565b5b610bab60e061179d565b90506000610bbb84828501610d47565b6000830152506020610bcf84828501610d47565b6020830152506040610be384828501610d47565b6040830152506060610bf784828501610d47565b6060830152506080610c0b848285016107d3565b60808301525060a082013567ffffffffffffffff811115610c2f57610c2e611bb1565b5b610c3b84828501610916565b60a08301525060c082013567ffffffffffffffff811115610c5f57610c5e611bb1565b5b610c6b84828501610916565b60c08301525092915050565b600060e08284031215610c8d57610c8c611ba7565b5b610c9760e061179d565b90506000610ca7848285016107be565b6000830152506020610cbb848285016107be565b6020830152506040610ccf848285016107be565b6040830152506060610ce3848285016107be565b6060830152506080610cf784828501610d5c565b60808301525060a082015167ffffffffffffffff811115610d1b57610d1a611bb1565b5b610d2784828501610944565b60a08301525060c0610d3b84828501610896565b60c08301525092915050565b600081359050610d5681611ca5565b92915050565b600081519050610d6b81611ca5565b92915050565b600060208284031215610d8757610d86611bca565b5b6000610d9584828501610896565b91505092915050565b600080600080600080600060a0888a031215610dbd57610dbc611bca565b5b600088013567ffffffffffffffff811115610ddb57610dda611bc0565b5b610de78a828b01610ae3565b975050602088013567ffffffffffffffff811115610e0857610e07611bc0565b5b610e148a828b016109b5565b965050604088013567ffffffffffffffff811115610e3557610e34611bc0565b5b610e418a828b016107fd565b9550955050606088013567ffffffffffffffff811115610e6457610e63611bc0565b5b610e708a828b01610b8b565b935050608088013567ffffffffffffffff811115610e9157610e90611bc0565b5b610e9d8a828b016108c0565b925092505092959891949750929550565b600060208284031215610ec457610ec3611bca565b5b6000610ed284828501610d5c565b91505092915050565b60008060008060808587031215610ef557610ef4611bca565b5b6000610f0387828801610d5c565b945050602085015167ffffffffffffffff811115610f2457610f23611bc0565b5b610f3087828801610853565b9350506040610f41878288016107e8565b9250506060610f52878288016107e8565b91505092959194509250565b6000610f6a838361141a565b905092915050565b6000610f7e83836114f0565b905092915050565b610f8f81611a10565b82525050565b610f9e816119fe565b82525050565b610fad816119fe565b82525050565b6000610fbf83856118a5565b935083602084028501610fd184611850565b8060005b87811015611015578484038952610fec828461198b565b610ff68582610f5e565b94506110018361188b565b925060208a01995050600181019050610fd5565b50829750879450505050509392505050565b60006110328261186a565b61103c81856118a5565b93508360208202850161104e8561185a565b8060005b8581101561108a578484038952815161106b8582610f72565b945061107683611898565b925060208a01995050600181019050611052565b50829750879550505050505092915050565b6110a581611a22565b82525050565b6110b481611a2e565b82525050565b60006110c683856118b6565b93506110d3838584611a98565b6110dc83611bcf565b840190509392505050565b60006110f282611875565b6110fc81856118b6565b935061110c818560208601611aa7565b61111581611bcf565b840191505092915050565b600061112b82611875565b61113581856118c7565b9350611145818560208601611aa7565b61114e81611bcf565b840191505092915050565b61116281611a74565b82525050565b600061117382611880565b61117d81856118d8565b935061118d818560208601611aa7565b61119681611bcf565b840191505092915050565b60006111ac82611880565b6111b681856118e9565b93506111c6818560208601611aa7565b6111cf81611bcf565b840191505092915050565b60006111e7600f836118e9565b91506111f282611be0565b602082019050919050565b600061120a600f836118e9565b915061121582611c09565b602082019050919050565b60006101408301600083015161123960008601826110ab565b50602083015184820360208601526112518282611168565b9150506040830151848203604086015261126b8282611168565b91505060608301516112806060860182610f95565b5060808301516112936080860182610f95565b5060a08301516112a660a0860182610f95565b5060c08301516112b960c086018261158c565b5060e08301516112cc60e086018261158c565b506101008301516112e161010086018261109c565b506101208301516112f661012086018261109c565b508091505092915050565b600060a083016000830151611319600086018261158c565b50602083015161132c602086018261158c565b50604083015161133f604086018261158c565b50606083015184820360608601526113578282611168565b915050608083015161136c6080860182611159565b508091505092915050565b600060e08301600083015161138f600086018261158c565b5060208301516113a2602086018261158c565b5060408301516113b5604086018261158c565b5060608301516113c8606086018261158c565b5060808301516113db6080860182610f86565b5060a083015184820360a08601526113f382826110e7565b91505060c083015184820360c086015261140d82826110e7565b9150508091505092915050565b600060e0830161142d60008401846118fa565b61143a6000860182610f95565b5061144860208401846118fa565b6114556020860182610f95565b5061146360408401846118fa565b6114706040860182610f95565b5061147e60608401846118fa565b61148b6060860182610f95565b5061149960808401846119b3565b6114a6608086018261158c565b506114b460a0840184611928565b85830360a08701526114c78382846110ba565b925050506114d860c0840184611911565b6114e560c086018261109c565b508091505092915050565b600060e0830160008301516115086000860182610f95565b50602083015161151b6020860182610f95565b50604083015161152e6040860182610f95565b5060608301516115416060860182610f95565b506080830151611554608086018261158c565b5060a083015184820360a086015261156c82826110e7565b91505060c083015161158160c086018261109c565b508091505092915050565b61159581611a6a565b82525050565b6115a481611a6a565b82525050565b60006020820190506115bf6000830184610fa4565b92915050565b60006060820190506115da6000830186610fa4565b6115e76020830185610fa4565b6115f4604083018461159b565b949350505050565b60006040820190506116116000830185610fa4565b61161e602083018461159b565b9392505050565b6000602082019050818103600083015261163f81846111a1565b905092915050565b60006020820190508181036000830152611660816111da565b9050919050565b60006020820190508181036000830152611680816111fd565b9050919050565b600060608201905081810360008301526116a18187611220565b905081810360208301526116b6818587610fb3565b905081810360408301526116ca8184611377565b905095945050505050565b600060408201905081810360008301526116ef8185611220565b905081810360208301526117038184611377565b90509392505050565b600060608201905081810360008301526117268186611301565b90506117356020830185610fa4565b81810360408301526117478184611120565b9050949350505050565b6000608082019050611766600083018761159b565b81810360208301526117788186611027565b90506117876040830185610fa4565b6117946060830184610fa4565b95945050505050565b60006117a76117b8565b90506117b38282611ada565b919050565b6000604051905090565b600067ffffffffffffffff8211156117dd576117dc611b69565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561180957611808611b69565b5b61181282611bcf565b9050602081019050919050565b600067ffffffffffffffff82111561183a57611839611b69565b5b61184382611bcf565b9050602081019050919050565b6000819050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061190960208401846107a9565b905092915050565b60006119206020840184610881565b905092915050565b6000808335600160200384360303811261194557611944611bc5565b5b83810192508235915060208301925067ffffffffffffffff82111561196d5761196c611b98565b5b60018202360384131561198357611982611bac565b5b509250929050565b60008235600160e0038336030381126119a7576119a6611bc5565b5b82810191505092915050565b60006119c26020840184610d47565b905092915050565b60006119d582611a6a565b91506119e083611a6a565b9250828210156119f3576119f2611b0b565b5b828203905092915050565b6000611a0982611a4a565b9050919050565b6000611a1b82611a4a565b9050919050565b60008115159050919050565b6000819050919050565b6000611a43826119fe565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a7f82611a86565b9050919050565b6000611a9182611a4a565b9050919050565b82818337600083830152505050565b60005b83811015611ac5578082015181840152602081019050611aaa565b83811115611ad4576000848401525b50505050565b611ae382611bcf565b810181811067ffffffffffffffff82111715611b0257611b01611b69565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f4572726f72206d73672e76616c75650000000000000000000000000000000000600082015250565b611c3b816119fe565b8114611c4657600080fd5b50565b611c5281611a10565b8114611c5d57600080fd5b50565b611c6981611a22565b8114611c7457600080fd5b50565b611c8081611a2e565b8114611c8b57600080fd5b50565b611c9781611a38565b8114611ca257600080fd5b50565b611cae81611a6a565b8114611cb957600080fd5b5056fea264697066735822122081e2c9b73a9986083fe664161a2917063253c08626edc6f9a18660bb3de5566a64736f6c63430008060033";

type BridgeCallerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeCallerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeCallerFacet__factory extends ContractFactory {
  constructor(...args: BridgeCallerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeCallerFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeCallerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeCallerFacet {
    return super.attach(address) as BridgeCallerFacet;
  }
  override connect(signer: Signer): BridgeCallerFacet__factory {
    return super.connect(signer) as BridgeCallerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeCallerFacetInterface {
    return new utils.Interface(_abi) as BridgeCallerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeCallerFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeCallerFacet;
  }
}
