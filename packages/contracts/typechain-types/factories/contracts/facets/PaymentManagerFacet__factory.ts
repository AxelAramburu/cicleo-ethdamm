/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentManagerFacet,
  PaymentManagerFacetInterface,
} from "../../../contracts/facets/PaymentManagerFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "PaymentManagerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "PaymentManagerOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "PaymentManagerTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "PaymentManagerTreasuryChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "createPaymentManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ids",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "editPaymentManagerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ids",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "editPaymentManagerTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
    ],
    name: "getPaymentManagerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "treasuryAccount",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct PaymentManagerData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061108a806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806305131835146100515780633066f74b14610082578063372991171461009e5780634641d2fc146100ba575b600080fd5b61006b60048036038101906100669190610b01565b6100d6565b604051610079929190610cf6565b60405180910390f35b61009c60048036038101906100979190610b2e565b61030c565b005b6100b860048036038101906100b39190610a92565b61048b565b005b6100d460048036038101906100cf9190610b2e565b6106a0565b005b6100de6108b1565b6000806100e961081f565b905080600001600085815260200190815260200160002081600001600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561017e57600080fd5b505afa158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b69190610b6e565b816040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461027e90610eba565b80601f01602080910402602001604051908101604052809291908181526020018280546102aa90610eba565b80156102f75780601f106102cc576101008083540402835291602001916102f7565b820191906000526020600020905b8154815290600101906020018083116102da57829003601f168201915b50505050508152505091509250925050915091565b8161031561084c565b73ffffffffffffffffffffffffffffffffffffffff16630e2b5e3133836040518363ffffffff1660e01b815260040161034f929190610cad565b60206040518083038186803b15801561036757600080fd5b505afa15801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610a65565b6103de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d590610cd6565b60405180910390fd5b60006103e861081f565b90508281600001600086815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847fbd92b8b0bb51f52111ef3caa27e8d59a941b0174847b8750486ddb6b2306991060405160405180910390a350505050565b600061049561081f565b90506000600182600101546104aa9190610da9565b905060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018681525082600001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906105b29291906108fe565b509050508082600101819055506105c761084c565b73ffffffffffffffffffffffffffffffffffffffff1663d1194e2b33836040518363ffffffff1660e01b8152600401610601929190610cad565b600060405180830381600087803b15801561061b57600080fd5b505af115801561062f573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fe4de2de68541c27fc2eb7910a1558fcdaedaef2eb1c9401febabc19b8fbb9eff866040516106919190610c92565b60405180910390a45050505050565b816106a961084c565b73ffffffffffffffffffffffffffffffffffffffff16630e2b5e3133836040518363ffffffff1660e01b81526004016106e3929190610cad565b60206040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610a65565b610772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076990610cd6565b60405180910390fd5b600061077c61081f565b90508281600001600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847f3618fb4b1bb52b27d4efc7212769b7db5671d3318027487f5786359d582274c360405160405180910390a350505050565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b600080610857610884565b90508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b82805461090a90610eba565b90600052602060002090601f01602090048101928261092c5760008555610973565b82601f1061094557805160ff1916838001178555610973565b82800160010185558215610973579182015b82811115610972578251825591602001919060010190610957565b5b5090506109809190610984565b5090565b5b8082111561099d576000816000905550600101610985565b5090565b60006109b46109af84610d4b565b610d26565b9050828152602081018484840111156109d0576109cf610faf565b5b6109db848285610e78565b509392505050565b6000813590506109f281610ff8565b92915050565b600081519050610a078161100f565b92915050565b600082601f830112610a2257610a21610faa565b5b8135610a328482602086016109a1565b91505092915050565b600081359050610a4a81611026565b92915050565b600081519050610a5f8161103d565b92915050565b600060208284031215610a7b57610a7a610fb9565b5b6000610a89848285016109f8565b91505092915050565b600080600060608486031215610aab57610aaa610fb9565b5b600084013567ffffffffffffffff811115610ac957610ac8610fb4565b5b610ad586828701610a0d565b9350506020610ae6868287016109e3565b9250506040610af7868287016109e3565b9150509250925092565b600060208284031215610b1757610b16610fb9565b5b6000610b2584828501610a3b565b91505092915050565b60008060408385031215610b4557610b44610fb9565b5b6000610b5385828601610a3b565b9250506020610b64858286016109e3565b9150509250929050565b600060208284031215610b8457610b83610fb9565b5b6000610b9284828501610a50565b91505092915050565b610ba481610dff565b82525050565b610bb381610dff565b82525050565b610bc281610e54565b82525050565b6000610bd382610d7c565b610bdd8185610d87565b9350610bed818560208601610e87565b610bf681610fbe565b840191505092915050565b6000610c0e600983610d98565b9150610c1982610fcf565b602082019050919050565b6000606083016000830151610c3c6000860182610b9b565b506020830151610c4f6020860182610bb9565b5060408301518482036040860152610c678282610bc8565b9150508091505092915050565b610c7d81610e3d565b82525050565b610c8c81610e47565b82525050565b6000602082019050610ca76000830184610baa565b92915050565b6000604082019050610cc26000830185610baa565b610ccf6020830184610c74565b9392505050565b60006020820190508181036000830152610cef81610c01565b9050919050565b60006040820190508181036000830152610d108185610c24565b9050610d1f6020830184610c83565b9392505050565b6000610d30610d41565b9050610d3c8282610eec565b919050565b6000604051905090565b600067ffffffffffffffff821115610d6657610d65610f7b565b5b610d6f82610fbe565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610db482610e3d565b9150610dbf83610e3d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df457610df3610f1d565b5b828201905092915050565b6000610e0a82610e1d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000610e5f82610e66565b9050919050565b6000610e7182610e1d565b9050919050565b82818337600083830152505050565b60005b83811015610ea5578082015181840152602081019050610e8a565b83811115610eb4576000848401525b50505050565b60006002820490506001821680610ed257607f821691505b60208210811415610ee657610ee5610f4c565b5b50919050565b610ef582610fbe565b810181811067ffffffffffffffff82111715610f1457610f13610f7b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b61100181610dff565b811461100c57600080fd5b50565b61101881610e11565b811461102357600080fd5b50565b61102f81610e3d565b811461103a57600080fd5b50565b61104681610e47565b811461105157600080fd5b5056fea264697066735822122057a48ba48a82c93d024ce685427cd9ec715bcbd224bed3bab2e509711d34302264736f6c63430008060033";

type PaymentManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentManagerFacet__factory extends ContractFactory {
  constructor(...args: PaymentManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentManagerFacet> {
    return super.deploy(overrides || {}) as Promise<PaymentManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentManagerFacet {
    return super.attach(address) as PaymentManagerFacet;
  }
  override connect(signer: Signer): PaymentManagerFacet__factory {
    return super.connect(signer) as PaymentManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentManagerFacetInterface {
    return new utils.Interface(_abi) as PaymentManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as PaymentManagerFacet;
  }
}
