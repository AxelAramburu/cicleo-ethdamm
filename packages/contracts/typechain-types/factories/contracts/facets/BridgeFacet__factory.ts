/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeFacet,
  BridgeFacetInterface,
} from "../../../contracts/facets/BridgeFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentDoneWithCicleo",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentManagerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061232d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d271d6e411610066578063d271d6e414610134578063d2c3fbb714610164578063d9ff430514610194578063ea745099146101c4578063fa540801146101f457610093565b806309ac248e14610098578063564b81ef146100b45780636834e3a8146100d2578063a7bb580314610102575b600080fd5b6100b260048036038101906100ad91906114ea565b610224565b005b6100bc610451565b6040516100c99190611be8565b60405180910390f35b6100ec60048036038101906100e79190611397565b61045e565b6040516100f99190611be8565b60405180910390f35b61011c6004803603810190610117919061141e565b6104b0565b60405161012b93929190611aca565b60405180910390f35b61014e60048036038101906101499190611575565b610534565b60405161015b9190611b46565b60405180910390f35b61017e60048036038101906101799190611467565b6105b8565b60405161018b9190611a19565b60405180910390f35b6101ae60048036038101906101a99190611575565b610767565b6040516101bb9190611aaf565b60405180910390f35b6101de60048036038101906101d9919061160c565b6107a7565b6040516101eb9190611a94565b60405180910390f35b61020e600480360381019061020991906113f1565b610817565b60405161021b9190611aaf565b60405180910390f35b6102868360200151838560400151866060015161023f610847565b60000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054866107a7565b6102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90611b88565b60405180910390fd5b60006102d48460200151610874565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd333087604001516040518463ffffffff1660e01b815260040161031793929190611a34565b602060405180830381600087803b15801561033157600080fd5b505af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036991906113c4565b50610372610847565b60000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906103c390611f3d565b91905055506103da846020015185604001516108c2565b83606001516040516103ec919061191e565b60405180910390208373ffffffffffffffffffffffffffffffffffffffff1685602001517f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c787604001516040516104439190611be8565b60405180910390a450505050565b6000804690508091505090565b6000610468610847565b60000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080600060418451146104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090611ba8565b60405180910390fd5b6020840151925060408401519150606084015160001a9050601b8160ff16101561052d57601b8161052a9190611d07565b90505b9193909250565b60606000610540610451565b905061054b81610aab565b61056c8773ffffffffffffffffffffffffffffffffffffffff166014610b83565b61057589610aab565b8661057f89610aab565b61058888610aab565b60405160200161059d9695949392919061197f565b60405160208183030381529060405291505095945050505050565b6000806040518060400160405280602081526020017f19457468657265756d205369676e6564204d6573736167653a0a303030303030815250905060008087519050603983019150620f423f81111561061057600080fd5b600080620186a090505b600081146106b657600081846106309190611d3e565b9050600081141561065a57600083141561065957600a826106519190611d3e565b91505061061a565b5b828061066590611f3d565b93505081816106749190611d6f565b8461067f9190611dc9565b9350600a8261068e9190611d3e565b915060308161069d9190611cb1565b905084806106aa90611f3d565b9550508085535061061a565b60008214156106c857601b91506106d8565b601a826106d59190611cb1565b91505b8185526000858b6040516020016106f0929190611935565b6040516020818303038152906040528051906020012090506001818b8b8b6040516000815260200160405260405161072b9493929190611b01565b6020604051602081039080840390855afa15801561074d573d6000803e3d6000fd5b505050602060405103519650505050505050949350505050565b60006107768686868686610534565b604051602001610786919061191e565b60405160208183030381529060405280519060200120905095945050505050565b6000806107b78888888888610534565b905060008060006107c7866104b0565b9250925092508973ffffffffffffffffffffffffffffffffffffffff166107f0858386866105b8565b73ffffffffffffffffffffffffffffffffffffffff16149450505050509695505050505050565b60008160405160200161082a9190611959565b604051602081830303815290604052805190602001209050919050565b6000807faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed2990508091505090565b60008061087f610dbf565b905080600001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006108cd83610dec565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610943576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093a90611bc8565b60405180910390fd5b60006103e8610950610f66565b61ffff168461095f9190611d6f565b6109699190611d3e565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000151838661099c9190611dc9565b6040518363ffffffff1660e01b81526004016109b9929190611a6b565b602060405180830381600087803b1580156109d357600080fd5b505af11580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b91906113c4565b50816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a34610f8c565b836040518363ffffffff1660e01b8152600401610a52929190611a6b565b602060405180830381600087803b158015610a6c57600080fd5b505af1158015610a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa491906113c4565b5050505050565b606060006001610aba84610fc4565b01905060008167ffffffffffffffff811115610ad957610ad861204c565b5b6040519080825280601f01601f191660200182016040528015610b0b5781602001600182028036833780820191505090505b509050600082602001820190505b600115610b78578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610b6257610b61611fbf565b5b0494506000851415610b7357610b78565b610b19565b819350505050919050565b606060006002836002610b969190611d6f565b610ba09190611cb1565b67ffffffffffffffff811115610bb957610bb861204c565b5b6040519080825280601f01601f191660200182016040528015610beb5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610c2357610c2261201d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c8757610c8661201d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610cc79190611d6f565b610cd19190611cb1565b90505b6001811115610d71577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610d1357610d1261201d565b5b1a60f81b828281518110610d2a57610d2961201d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610d6a90611eb0565b9050610cd4565b5060008414610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dac90611b68565b60405180910390fd5b8091505092915050565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b610df4611144565b6000610dfe610dbf565b90508060000160008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610edc90611eda565b80601f0160208091040260200160405190810160405280929190818152602001828054610f0890611eda565b8015610f555780601f10610f2a57610100808354040283529160200191610f55565b820191906000526020600020905b815481529060010190602001808311610f3857829003601f168201915b505050505081525050915050919050565b600080610f71611117565b90508060010160149054906101000a900461ffff1691505090565b600080610f97611117565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611022577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161101857611017611fbf565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061105f576d04ee2d6d415b85acef8100000000838161105557611054611fbf565b5b0492506020810190505b662386f26fc10000831061108e57662386f26fc10000838161108457611083611fbf565b5b0492506010810190505b6305f5e10083106110b7576305f5e10083816110ad576110ac611fbf565b5b0492506008810190505b61271083106110dc5761271083816110d2576110d1611fbf565b5b0492506004810190505b606483106110ff57606483816110f5576110f4611fbf565b5b0492506002810190505b600a831061110e576001810190505b80915050919050565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b60006111a461119f84611c28565b611c03565b9050828152602081018484840111156111c0576111bf61208a565b5b6111cb848285611e6e565b509392505050565b60006111e66111e184611c59565b611c03565b9050828152602081018484840111156112025761120161208a565b5b61120d848285611e6e565b509392505050565b6000813590506112248161226d565b92915050565b60008151905061123981612284565b92915050565b60008135905061124e8161229b565b92915050565b600082601f8301126112695761126861207b565b5b8135611279848260208601611191565b91505092915050565b600081359050611291816122b2565b92915050565b600082601f8301126112ac576112ab61207b565b5b81356112bc8482602086016111d3565b91505092915050565b600060a082840312156112db576112da612080565b5b6112e560a0611c03565b905060006112f58482850161136d565b60008301525060206113098482850161136d565b602083015250604061131d8482850161136d565b604083015250606082013567ffffffffffffffff81111561134157611340612085565b5b61134d84828501611297565b606083015250608061136184828501611282565b60808301525092915050565b60008135905061137c816122c9565b92915050565b600081359050611391816122e0565b92915050565b6000602082840312156113ad576113ac612094565b5b60006113bb84828501611215565b91505092915050565b6000602082840312156113da576113d9612094565b5b60006113e88482850161122a565b91505092915050565b60006020828403121561140757611406612094565b5b60006114158482850161123f565b91505092915050565b60006020828403121561143457611433612094565b5b600082013567ffffffffffffffff8111156114525761145161208f565b5b61145e84828501611254565b91505092915050565b6000806000806080858703121561148157611480612094565b5b600085013567ffffffffffffffff81111561149f5761149e61208f565b5b6114ab87828801611297565b94505060206114bc87828801611382565b93505060406114cd8782880161123f565b92505060606114de8782880161123f565b91505092959194509250565b60008060006060848603121561150357611502612094565b5b600084013567ffffffffffffffff8111156115215761152061208f565b5b61152d868287016112c5565b935050602061153e86828701611215565b925050604084013567ffffffffffffffff81111561155f5761155e61208f565b5b61156b86828701611254565b9150509250925092565b600080600080600060a0868803121561159157611590612094565b5b600061159f8882890161136d565b95505060206115b088828901611215565b94505060406115c18882890161136d565b935050606086013567ffffffffffffffff8111156115e2576115e161208f565b5b6115ee88828901611297565b92505060806115ff8882890161136d565b9150509295509295909350565b60008060008060008060c0878903121561162957611628612094565b5b600061163789828a0161136d565b965050602061164889828a01611215565b955050604061165989828a0161136d565b945050606087013567ffffffffffffffff81111561167a5761167961208f565b5b61168689828a01611297565b935050608061169789828a0161136d565b92505060a087013567ffffffffffffffff8111156116b8576116b761208f565b5b6116c489828a01611254565b9150509295509295509295565b6116da81611dfd565b82525050565b6116e981611e0f565b82525050565b6116f881611e1b565b82525050565b61170f61170a82611e1b565b611f86565b82525050565b600061172082611c8a565b61172a8185611c95565b935061173a818560208601611e7d565b61174381612099565b840191505092915050565b600061175982611c8a565b6117638185611ca6565b9350611773818560208601611e7d565b80840191505092915050565b600061178c602083611c95565b9150611797826120aa565b602082019050919050565b60006117af601283611ca6565b91506117ba826120d3565b601282019050919050565b60006117d2601183611c95565b91506117dd826120fc565b602082019050919050565b60006117f5600783611ca6565b915061180082612125565b600782019050919050565b6000611818600883611ca6565b91506118238261214e565b600882019050919050565b600061183b602083611ca6565b915061184682612177565b602082019050919050565b600061185e600783611ca6565b9150611869826121a0565b600782019050919050565b6000611881601883611c95565b915061188c826121c9565b602082019050919050565b60006118a4600883611ca6565b91506118af826121f2565b600882019050919050565b60006118c7602083611ca6565b91506118d28261221b565b602082019050919050565b60006118ea600f83611c95565b91506118f582612244565b602082019050919050565b61190981611e57565b82525050565b61191881611e61565b82525050565b600061192a828461174e565b915081905092915050565b6000611941828561174e565b915061194d828461174e565b91508190509392505050565b60006119648261182e565b915061197082846116fe565b60208201915081905092915050565b600061198a826118ba565b9150611996828961174e565b91506119a1826117e8565b91506119ad828861174e565b91506119b8826117a2565b91506119c4828761174e565b91506119cf82611851565b91506119db828661174e565b91506119e682611897565b91506119f2828561174e565b91506119fd8261180b565b9150611a09828461174e565b9150819050979650505050505050565b6000602082019050611a2e60008301846116d1565b92915050565b6000606082019050611a4960008301866116d1565b611a5660208301856116d1565b611a636040830184611900565b949350505050565b6000604082019050611a8060008301856116d1565b611a8d6020830184611900565b9392505050565b6000602082019050611aa960008301846116e0565b92915050565b6000602082019050611ac460008301846116ef565b92915050565b6000606082019050611adf60008301866116ef565b611aec60208301856116ef565b611af9604083018461190f565b949350505050565b6000608082019050611b1660008301876116ef565b611b23602083018661190f565b611b3060408301856116ef565b611b3d60608301846116ef565b95945050505050565b60006020820190508181036000830152611b608184611715565b905092915050565b60006020820190508181036000830152611b818161177f565b9050919050565b60006020820190508181036000830152611ba1816117c5565b9050919050565b60006020820190508181036000830152611bc181611874565b9050919050565b60006020820190508181036000830152611be1816118dd565b9050919050565b6000602082019050611bfd6000830184611900565b92915050565b6000611c0d611c1e565b9050611c198282611f0c565b919050565b6000604051905090565b600067ffffffffffffffff821115611c4357611c4261204c565b5b611c4c82612099565b9050602081019050919050565b600067ffffffffffffffff821115611c7457611c7361204c565b5b611c7d82612099565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611cbc82611e57565b9150611cc783611e57565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cfc57611cfb611f90565b5b828201905092915050565b6000611d1282611e61565b9150611d1d83611e61565b92508260ff03821115611d3357611d32611f90565b5b828201905092915050565b6000611d4982611e57565b9150611d5483611e57565b925082611d6457611d63611fbf565b5b828204905092915050565b6000611d7a82611e57565b9150611d8583611e57565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611dbe57611dbd611f90565b5b828202905092915050565b6000611dd482611e57565b9150611ddf83611e57565b925082821015611df257611df1611f90565b5b828203905092915050565b6000611e0882611e37565b9050919050565b60008115159050919050565b6000819050919050565b6000611e3082611dfd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611e9b578082015181840152602081019050611e80565b83811115611eaa576000848401525b50505050565b6000611ebb82611e57565b91506000821415611ecf57611ece611f90565b5b600182039050919050565b60006002820490506001821680611ef257607f821691505b60208210811415611f0657611f05611fee565b5b50919050565b611f1582612099565b810181811067ffffffffffffffff82111715611f3457611f3361204c565b5b80604052505050565b6000611f4882611e57565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f7b57611f7a611f90565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f0a5061796d656e74204d616e616765723a200000000000000000000000000000600082015250565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f0a557365723a2000000000000000000000000000000000000000000000000000600082015250565b7f0a4e6f6e63653a20000000000000000000000000000000000000000000000000600082015250565b7f19457468657265756d205369676e6564204d6573736167653a0a303030303030600082015250565b7f0a4e616d653a2000000000000000000000000000000000000000000000000000600082015250565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b7f0a50726963653a20000000000000000000000000000000000000000000000000600082015250565b7f4369636c656f2042726964676564205061796d656e74730a0a436861696e3a20600082015250565b7f496e76616c696420737562696e666f0000000000000000000000000000000000600082015250565b61227681611dfd565b811461228157600080fd5b50565b61228d81611e0f565b811461229857600080fd5b50565b6122a481611e1b565b81146122af57600080fd5b50565b6122bb81611e25565b81146122c657600080fd5b50565b6122d281611e57565b81146122dd57600080fd5b50565b6122e981611e61565b81146122f457600080fd5b5056fea2646970667358221220499c5cde35f26cc12cbb78daf395ff20ecc94dd15db4cab0baff219e63dd203364736f6c63430008060033";

type BridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacet__factory extends ContractFactory {
  constructor(...args: BridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacet {
    return super.attach(address) as BridgeFacet;
  }
  override connect(signer: Signer): BridgeFacet__factory {
    return super.connect(signer) as BridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacetInterface {
    return new utils.Interface(_abi) as BridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacet;
  }
}
