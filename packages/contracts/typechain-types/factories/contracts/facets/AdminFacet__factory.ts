/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AdminFacet,
  AdminFacetInterface,
} from "../../../contracts/facets/AdminFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeExecutor",
        type: "address",
      },
    ],
    name: "setBridgeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_security",
        type: "address",
      },
    ],
    name: "setSecurity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxAccount",
        type: "address",
      },
    ],
    name: "setTaxAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_taxPercentage",
        type: "uint16",
      },
    ],
    name: "setTaxPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610729806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806352228054146100675780638da5cb5b14610083578063cba25e4b146100a1578063d0385b5e146100bd578063e2fbd745146100d9578063f2fde38b146100f5575b600080fd5b610081600480360381019061007c91906104ed565b610111565b005b61008b61016c565b604051610098919061059c565b60405180910390f35b6100bb60048036038101906100b691906104ed565b61017b565b005b6100d760048036038101906100d291906104ed565b6101d6565b005b6100f360048036038101906100ee919061051a565b610231565b005b61010f600480360381019061010a91906104ed565b6102b0565b005b6101196102c4565b600061012361035f565b9050818160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600061017661038c565b905090565b6101836102c4565b600061018d61035f565b9050818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6101de6102c4565b60006101e861035f565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6103e88161ffff1610610279576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610270906105d7565b60405180910390fd5b6102816102c4565b600061028b61035f565b9050818160010160146101000a81548161ffff021916908361ffff1602179055505050565b6102b86102c4565b6102c1816103bf565b50565b6102cc610496565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610354906105b7565b60405180910390fd5b565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6000610396610496565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006103c9610496565b905060008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000813590506104d2816106c5565b92915050565b6000813590506104e7816106dc565b92915050565b60006020828403121561050357610502610648565b5b6000610511848285016104c3565b91505092915050565b6000602082840312156105305761052f610648565b5b600061053e848285016104d8565b91505092915050565b61055081610608565b82525050565b60006105636022836105f7565b915061056e8261064d565b604082019050919050565b60006105866017836105f7565b91506105918261069c565b602082019050919050565b60006020820190506105b16000830184610547565b92915050565b600060208201905081810360008301526105d081610556565b9050919050565b600060208201905081810360008301526105f081610579565b9050919050565b600082825260208201905092915050565b600061061382610628565b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f5461782070657263656e7461676520746f6f2068696768000000000000000000600082015250565b6106ce81610608565b81146106d957600080fd5b50565b6106e58161061a565b81146106f057600080fd5b5056fea26469706673582212202ba795239143cdd033395c02c5e1f146e5baaee40746b5f95ed5093fadf02ff164736f6c63430008060033";

type AdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminFacet__factory extends ContractFactory {
  constructor(...args: AdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdminFacet> {
    return super.deploy(overrides || {}) as Promise<AdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdminFacet {
    return super.attach(address) as AdminFacet;
  }
  override connect(signer: Signer): AdminFacet__factory {
    return super.connect(signer) as AdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminFacetInterface {
    return new utils.Interface(_abi) as AdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminFacet {
    return new Contract(address, _abi, signerOrProvider) as AdminFacet;
  }
}
