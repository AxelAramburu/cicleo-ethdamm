/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AdminFacet,
  AdminFacetInterface,
} from "../../../contracts/facets/AdminFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeExecutor",
        type: "address",
      },
    ],
    name: "setBridgeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_taxAccount",
        type: "address",
      },
    ],
    name: "setTaxAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_taxPercentage",
        type: "uint16",
      },
    ],
    name: "setTaxPercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106a7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80638da5cb5b1461005c578063cba25e4b1461007a578063d0385b5e14610096578063e2fbd745146100b2578063f2fde38b146100ce575b600080fd5b6100646100ea565b604051610071919061051a565b60405180910390f35b610094600480360381019061008f919061046b565b6100f9565b005b6100b060048036038101906100ab919061046b565b610154565b005b6100cc60048036038101906100c79190610498565b6101af565b005b6100e860048036038101906100e3919061046b565b61022e565b005b60006100f4610242565b905090565b610101610275565b600061010b610310565b9050818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61015c610275565b6000610166610310565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6103e88161ffff16106101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ee90610555565b60405180910390fd5b6101ff610275565b6000610209610310565b9050818160010160146101000a81548161ffff021916908361ffff1602179055505050565b610236610275565b61023f8161033d565b50565b600061024c610414565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027d610414565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461030e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030590610535565b60405180910390fd5b565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6000610347610414565b905060008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b60008135905061045081610643565b92915050565b6000813590506104658161065a565b92915050565b600060208284031215610481576104806105c6565b5b600061048f84828501610441565b91505092915050565b6000602082840312156104ae576104ad6105c6565b5b60006104bc84828501610456565b91505092915050565b6104ce81610586565b82525050565b60006104e1602283610575565b91506104ec826105cb565b604082019050919050565b6000610504601783610575565b915061050f8261061a565b602082019050919050565b600060208201905061052f60008301846104c5565b92915050565b6000602082019050818103600083015261054e816104d4565b9050919050565b6000602082019050818103600083015261056e816104f7565b9050919050565b600082825260208201905092915050565b6000610591826105a6565b9050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f5461782070657263656e7461676520746f6f2068696768000000000000000000600082015250565b61064c81610586565b811461065757600080fd5b50565b61066381610598565b811461066e57600080fd5b5056fea26469706673582212200fa561be3611ab3fab8064407cafa7ff41e6dbf0ee8aac5c3d950febe540eec364736f6c63430008060033";

type AdminFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdminFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdminFacet__factory extends ContractFactory {
  constructor(...args: AdminFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdminFacet> {
    return super.deploy(overrides || {}) as Promise<AdminFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdminFacet {
    return super.attach(address) as AdminFacet;
  }
  override connect(signer: Signer): AdminFacet__factory {
    return super.connect(signer) as AdminFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdminFacetInterface {
    return new utils.Interface(_abi) as AdminFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdminFacet {
    return new Contract(address, _abi, signerOrProvider) as AdminFacet;
  }
}
