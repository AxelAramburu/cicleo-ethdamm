/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentFacet,
  PaymentFacetInterface,
} from "../../../contracts/facets/PaymentFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentDoneWithCicleo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "PaymentManagerCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "getRouterSwap",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
    ],
    name: "payWithCicleo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        internalType: "contract IOpenOceanCaller",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guaranteedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IOpenOceanCaller.CallDescription[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "payWithCicleoWithSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "routerSwap",
        type: "address",
      },
    ],
    name: "setRouterSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d94806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ebe49d146100515780634281ba6f1461006d57806370a86d851461008b578063f2517fb2146100a7575b600080fd5b61006b60048036038101906100669190611127565b6100c3565b005b61007561047a565b6040516100829190611654565b60405180910390f35b6100a560048036038101906100a09190611059565b6104b2565b005b6100c160048036038101906100bc91906110b3565b61050d565b005b60006100ce89610615565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013b906116cf565b60405180910390fd5b610157338560000151866080015161078f565b600061016161047a565b9050846000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38287608001516040518363ffffffff1660e01b81526004016101a69291906115e4565b602060405180830381600087803b1580156101c057600080fd5b505af11580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f8919061102c565b506000856020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102389190611592565b60206040518083038186803b15801561025057600080fd5b505afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190611086565b90508173ffffffffffffffffffffffffffffffffffffffff166390411a32888888886040518563ffffffff1660e01b81526004016102c9949392919061160d565b602060405180830381600087803b1580156102e357600080fd5b505af11580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190611086565b506000866020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035b9190611592565b60206040518083038186803b15801561037357600080fd5b505afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190611086565b90508a82826103ba9190611943565b10156103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f29061168f565b60405180910390fd5b6104058c8c610988565b8989604051610415929190611579565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff168d7f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78e60405161046491906116ef565b60405180910390a4505050505050505050505050565b600080610485610b71565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6104ba610b9e565b60006104c4610b71565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600061051885610615565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16141561058e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610585906116cf565b60405180910390fd5b61059d3382602001518661078f565b6105a78585610988565b82826040516105b7929190611579565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff16867f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78760405161060691906116ef565b60405180910390a45050505050565b61061d610d1e565b6000610627610c39565b90508060000160008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461070590611aa3565b80601f016020809104026020016040519081016040528092919081815260200182805461073190611aa3565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b505050505081525050915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107ca9190611592565b60206040518083038186803b1580156107e257600080fd5b505afa1580156107f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081a9190611086565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530856040518463ffffffff1660e01b8152600401610859939291906115ad565b602060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ab919061102c565b5081816108b89190611862565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108f19190611592565b60206040518083038186803b15801561090957600080fd5b505afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109419190611086565b1015610982576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610979906116af565b60405180910390fd5b50505050565b600061099383610615565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a00906116cf565b60405180910390fd5b60006103e8610a16610c66565b61ffff1684610a2591906118e9565b610a2f91906118b8565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518386610a629190611943565b6040518363ffffffff1660e01b8152600401610a7f9291906115e4565b602060405180830381600087803b158015610a9957600080fd5b505af1158015610aad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad1919061102c565b50816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610afa610c8c565b836040518363ffffffff1660e01b8152600401610b189291906115e4565b602060405180830381600087803b158015610b3257600080fd5b505af1158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a919061102c565b5050505050565b6000807fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef90508091505090565b610ba6610cc4565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2e9061166f565b60405180910390fd5b565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b600080610c71610cf1565b90508060010160149054906101000a900461ffff1691505090565b600080610c97610cf1565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000610d7e610d798461172f565b61170a565b905082815260208101848484011115610d9a57610d99611be5565b5b610da5848285611a61565b509392505050565b600081359050610dbc81611cd4565b92915050565b60008083601f840112610dd857610dd7611bcc565b5b8235905067ffffffffffffffff811115610df557610df4611bc7565b5b602083019150836020820283011115610e1157610e10611be0565b5b9250929050565b600081519050610e2781611ceb565b92915050565b600082601f830112610e4257610e41611bcc565b5b8135610e52848260208601610d6b565b91505092915050565b600081359050610e6a81611d02565b92915050565b600081359050610e7f81611d19565b92915050565b600081359050610e9481611d30565b92915050565b60008083601f840112610eb057610eaf611bcc565b5b8235905067ffffffffffffffff811115610ecd57610ecc611bc7565b5b602083019150836001820283011115610ee957610ee8611be0565b5b9250929050565b60006101408284031215610f0757610f06611bd1565b5b610f1261014061170a565b90506000610f2284828501610e5b565b6000830152506020610f3684828501610e5b565b6020830152506040610f4a84828501610dad565b6040830152506060610f5e84828501610dad565b6060830152506080610f7284828501611002565b60808301525060a0610f8684828501611002565b60a08301525060c0610f9a84828501611002565b60c08301525060e0610fae84828501611002565b60e083015250610100610fc384828501610dad565b6101008301525061012082013567ffffffffffffffff811115610fe957610fe8611bdb565b5b610ff584828501610e2d565b6101208301525092915050565b60008135905061101181611d47565b92915050565b60008151905061102681611d47565b92915050565b60006020828403121561104257611041611bf4565b5b600061105084828501610e18565b91505092915050565b60006020828403121561106f5761106e611bf4565b5b600061107d84828501610e85565b91505092915050565b60006020828403121561109c5761109b611bf4565b5b60006110aa84828501611017565b91505092915050565b600080600080606085870312156110cd576110cc611bf4565b5b60006110db87828801611002565b94505060206110ec87828801611002565b935050604085013567ffffffffffffffff81111561110d5761110c611bea565b5b61111987828801610e9a565b925092505092959194509250565b60008060008060008060008060c0898b03121561114757611146611bf4565b5b60006111558b828c01611002565b98505060206111668b828c01611002565b975050604089013567ffffffffffffffff81111561118757611186611bea565b5b6111938b828c01610e9a565b965096505060606111a68b828c01610e70565b945050608089013567ffffffffffffffff8111156111c7576111c6611bea565b5b6111d38b828c01610ef0565b93505060a089013567ffffffffffffffff8111156111f4576111f3611bea565b5b6112008b828c01610dc2565b92509250509295985092959890939650565b600061121e83836113fc565b905092915050565b61122f81611977565b82525050565b61123e81611977565b82525050565b60006112508385611782565b93508360208402850161126284611760565b8060005b878110156112a657848403895261127d8284611823565b6112878582611212565b945061129283611775565b925060208a01995050600181019050611266565b50829750879450505050509392505050565b60006112c48385611793565b93506112d1838584611a61565b6112da83611bf9565b840190509392505050565b60006112f08261176a565b6112fa8185611793565b935061130a818560208601611a70565b61131381611bf9565b840191505092915050565b611327816119f5565b82525050565b61133681611a19565b82525050565b61134581611a3d565b82525050565b600061135783856117b5565b9350611364838584611a61565b82840190509392505050565b600061137d6022836117a4565b915061138882611c0a565b604082019050919050565b60006113a0600b836117a4565b91506113ab82611c59565b602082019050919050565b60006113c3600f836117a4565b91506113ce82611c82565b602082019050919050565b60006113e6600f836117a4565b91506113f182611cab565b602082019050919050565b60006080830161140f600084018461184b565b61141c600086018261155b565b5061142a602084018461184b565b611437602086018261155b565b50611445604084018461184b565b611452604086018261155b565b5061146060608401846117c0565b85830360608701526114738382846112b8565b925050508091505092915050565b60006101408301600083015161149a600086018261131e565b5060208301516114ad602086018261131e565b5060408301516114c06040860182611226565b5060608301516114d36060860182611226565b5060808301516114e6608086018261155b565b5060a08301516114f960a086018261155b565b5060c083015161150c60c086018261155b565b5060e083015161151f60e086018261155b565b50610100830151611534610100860182611226565b5061012083015184820361012086015261154e82826112e5565b9150508091505092915050565b611564816119eb565b82525050565b611573816119eb565b82525050565b600061158682848661134b565b91508190509392505050565b60006020820190506115a76000830184611235565b92915050565b60006060820190506115c26000830186611235565b6115cf6020830185611235565b6115dc604083018461156a565b949350505050565b60006040820190506115f96000830185611235565b611606602083018461156a565b9392505050565b6000606082019050611622600083018761132d565b81810360208301526116348186611481565b90508181036040830152611649818486611244565b905095945050505050565b6000602082019050611669600083018461133c565b92915050565b6000602082019050818103600083015261168881611370565b9050919050565b600060208201905081810360008301526116a881611393565b9050919050565b600060208201905081810360008301526116c8816113b6565b9050919050565b600060208201905081810360008301526116e8816113d9565b9050919050565b6000602082019050611704600083018461156a565b92915050565b6000611714611725565b90506117208282611ad5565b919050565b6000604051905090565b600067ffffffffffffffff82111561174a57611749611b93565b5b61175382611bf9565b9050602081019050919050565b6000819050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600080833560016020038436030381126117dd576117dc611bef565b5b83810192508235915060208301925067ffffffffffffffff82111561180557611804611bc2565b5b60018202360384131561181b5761181a611bd6565b5b509250929050565b60008235600160800383360303811261183f5761183e611bef565b5b82810191505092915050565b600061185a6020840184611002565b905092915050565b600061186d826119eb565b9150611878836119eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118ad576118ac611b06565b5b828201905092915050565b60006118c3826119eb565b91506118ce836119eb565b9250826118de576118dd611b35565b5b828204905092915050565b60006118f4826119eb565b91506118ff836119eb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561193857611937611b06565b5b828202905092915050565b600061194e826119eb565b9150611959836119eb565b92508282101561196c5761196b611b06565b5b828203905092915050565b6000611982826119cb565b9050919050565b60008115159050919050565b60006119a082611977565b9050919050565b60006119b282611977565b9050919050565b60006119c482611977565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a0082611a07565b9050919050565b6000611a12826119cb565b9050919050565b6000611a2482611a2b565b9050919050565b6000611a36826119cb565b9050919050565b6000611a4882611a4f565b9050919050565b6000611a5a826119cb565b9050919050565b82818337600083830152505050565b60005b83811015611a8e578082015181840152602081019050611a73565b83811115611a9d576000848401525b50505050565b60006002820490506001821680611abb57607f821691505b60208210811415611acf57611ace611b64565b5b50919050565b611ade82611bf9565b810181811067ffffffffffffffff82111715611afd57611afc611b93565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f53776170206661696c6564000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e76616c696420737562696e666f0000000000000000000000000000000000600082015250565b611cdd81611977565b8114611ce857600080fd5b50565b611cf481611989565b8114611cff57600080fd5b50565b611d0b81611995565b8114611d1657600080fd5b50565b611d22816119a7565b8114611d2d57600080fd5b50565b611d39816119b9565b8114611d4457600080fd5b50565b611d50816119eb565b8114611d5b57600080fd5b5056fea26469706673582212200277c4d945f3f60ac5f9881eeea3fc9aca3813ab0a67b85d473c04cf8436dff864736f6c63430008060033";

type PaymentFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentFacet__factory extends ContractFactory {
  constructor(...args: PaymentFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentFacet> {
    return super.deploy(overrides || {}) as Promise<PaymentFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentFacet {
    return super.attach(address) as PaymentFacet;
  }
  override connect(signer: Signer): PaymentFacet__factory {
    return super.connect(signer) as PaymentFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentFacetInterface {
    return new utils.Interface(_abi) as PaymentFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentFacet {
    return new Contract(address, _abi, signerOrProvider) as PaymentFacet;
  }
}
