/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BridgeFacet,
  BridgeFacetInterface,
} from "../../../../contracts/Router/facets/BridgeFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentSubscription",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "SubscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentBlockchainId",
        type: "uint256",
      },
    ],
    name: "SelectBlockchain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "SubscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SelectToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "UserEdited",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "bridgeRenew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentBlockchainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "referral",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgeSubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionManagerId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "subscriptionId",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611eae806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a82de68411610066578063a82de68414610169578063bc0dee831461017c578063d2c3fbb71461018f578063e73785e5146101ba578063fa540801146101da57600080fd5b806341b8cbb3146100a3578063564b81ef146100cb5780636834e3a8146100db57806378aa65e614610123578063a7bb580314610138575b600080fd5b6100b66100b1366004611825565b61023b565b60405190151581526020015b60405180910390f35b465b6040519081526020016100c2565b6100cd6100e93660046118a3565b6001600160a01b031660009081527faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed29602052604090205490565b6101366101313660046118c0565b610290565b005b61014b610146366004611965565b6106e0565b60408051938452602084019290925260ff16908201526060016100c2565b6100cd6101773660046119a2565b610769565b61013661018a3660046119f4565b6107a9565b6101a261019d366004611a24565b610bca565b6040516001600160a01b0390911681526020016100c2565b6101cd6101c83660046119a2565b610d5b565b6040516100c29190611ac7565b6100cd6101e8366004611afa565b604080517f19457468657265756d205369676e6564204d6573736167653a0a3030303030306020820152908101829052600090606001604051602081830303815290604052805190602001209050919050565b60008061024b8888888888610d5b565b9050600080600061025b866106e0565b925092509250886001600160a01b031661027785838686610bca565b6001600160a01b0316149b9a5050505050505050505050565b600061029b89610dd2565b6001600160a01b03881660009081527faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed296020819052604090912054919250906102ec908b908b908b9089908861023b565b6103315760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064015b60405180910390fd5b60ff89161580159061034757508860ff1660ff14155b6103825760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204964202160a01b6044820152606401610328565b816001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103bb57600080fd5b505afa1580156103cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f39190611b13565b6040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b15801561044357600080fd5b505af1158015610457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047b9190611b45565b506001600160a01b03881660009081526020829052604081208054916104a083611b76565b909155505060008a8152600080516020611e5983398151915260209081526040808320338452909152902080546001600160a01b0319166001600160a01b0386161790556104f085838c8b610e75565b6000826001600160a01b0316637a94a6336040518163ffffffff1660e01b815260040160206040518083038186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105639190611b91565b61056d9042611baa565b604051636f04176160e11b81526001600160a01b038b811660048301526024820183905260ff8d1660448301529192509084169063de082ec290606401600060405180830381600087803b1580156105c457600080fd5b505af11580156105d8573d6000803e3d6000fd5b505050508960ff16896001600160a01b03168c7f9a609a853c9e2ab0e30b81e8dd73c72d48e2842194767c532f778ad9b35912538960405161061c91815260200190565b60405180910390a48960ff16896001600160a01b03168c7ffcda9f876b19b1444bd7bbe7732cf0c2eb5764f619714c9d7a7d6e75f87e1c188460405161066491815260200190565b60405180910390a4604051889033908d907fb64ecb18513cc02639fd188fb978a50ab97d2d84d422b5c7621d82cb40af5c8390600090a46040516001600160a01b0388169033908d907f74c91477beff2e693b50864f8f539037dae74fee2710b1fc6a9da5634c86a32690600090a45050505050505050505050565b600080600083516041146107365760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e67746800000000000000006044820152606401610328565b50505060208101516040820151606083015160001a601b8110156107625761075f601b82611bc2565b90505b9193909250565b60006107788686868686610d5b565b6040516020016107889190611c03565b60405160208183030381529060405280519060200120905095945050505050565b7fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f0546001600160a01b0316331461080d5760405162461bcd60e51b815260206004820152600860248201526713db9b1e48189bdd60c21b6044820152606401610328565b600061081883610dd2565b6040516306ffd81f60e41b81526001600160a01b038481166004830152919250600091829190841690636ffd81f090602401604080518083038186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190611c1f565b9150915060006108a9868461132a565b51905081156108ee5760405162461bcd60e51b8152602060048201526011602482015270537562207374696c6c2072756e6e696e6760781b6044820152606401610328565b60ff83161580159061090457508260ff1660ff14155b61093f5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204964202160a01b6044820152606401610328565b836001600160a01b031663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561097857600080fd5b505afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b09190611b13565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a389190611b45565b50610a4581858888610e75565b6000846001600160a01b0316637a94a6336040518163ffffffff1660e01b815260040160206040518083038186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190611b91565b610ac29042611baa565b604051636f04176160e11b81526001600160a01b0388811660048301526024820183905260ff871660448301529192509086169063de082ec290606401600060405180830381600087803b158015610b1957600080fd5b505af1158015610b2d573d6000803e3d6000fd5b505050508360ff16866001600160a01b0316887f9a609a853c9e2ab0e30b81e8dd73c72d48e2842194767c532f778ad9b359125385604051610b7191815260200190565b60405180910390a48360ff16866001600160a01b0316887ffcda9f876b19b1444bd7bbe7732cf0c2eb5764f619714c9d7a7d6e75f87e1c1884604051610bb991815260200190565b60405180910390a450505050505050565b6040805180820190915260208082527f19457468657265756d205369676e6564204d6573736167653a0a303030303030908201528451600091906039820190620f423f811115610c1957600080fd5b6000620186a05b8015610ca5576000610c328285611c54565b905080610c515782610c5157610c49600a83611c54565b915050610c20565b82610c5b81611b76565b9350610c6990508282611c76565b610c739085611c95565b9350610c80600a83611c54565b9150610c8d603082611baa565b905084610c9981611b76565b95505080855350610c20565b81610cb357601b9150610cc1565b610cbe601a83611baa565b91505b8185526000858b604051602001610cd9929190611cac565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8d1691830191909152606082018b9052608082018a9052915060019060a0016020604051602081039080840390855afa158015610d41573d6000803e3d6000fd5b5050604051601f1901519c9b505050505050505050505050565b606046610d678161143a565b610d7b866001600160a01b031660146114d7565b610d848961143a565b610d908960ff1661143a565b610d998861143a565b610da28861143a565b604051602001610db796959493929190611cdb565b60405160208183030381529060405291505095945050505050565b60007fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e54604051633eb0cceb60e21b8152600481018490526001600160a01b039091169063fac333ac9060240160206040518083038186803b158015610e3757600080fd5b505afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f9190611b13565b92915050565b60006103e87fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef60020154610eb490600160a01b900461ffff1687611c76565b610ebe9190611c54565b90506000846001600160a01b0316639d76ea586040518163ffffffff1660e01b815260040160206040518083038186803b158015610efb57600080fd5b505afa158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190611b13565b90506000856001600160a01b03166361d027b36040518163ffffffff1660e01b815260040160206040518083038186803b158015610f7057600080fd5b505afa158015610f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa89190611b13565b90506000610fb68489611c95565b6000878152600080516020611e59833981519152602090815260408083206001600160a01b038a8116855292528083205481516306ffd81f60e41b8152908316600482015281519495509293918b1692636ffd81f09260248083019392829003018186803b15801561102757600080fd5b505afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190611c1f565b6000898152600080516020611e59833981519152602090815260408083206001600160a01b038c811685529252909120549193501615801591506110d3575060008781527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f3602052604090205461ffff1615155b80156110dc5750805b156111ea5760008781527fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f360205260408120546103e8906111219061ffff1685611c76565b61112b9190611c54565b90506111378184611c95565b6000898152600080516020611e59833981519152602090815260408083206001600160a01b038c8116855290835281842054825163a9059cbb60e01b8152908216600482015260248101879052915194975089169363a9059cbb93604480840194938390030190829087803b1580156111af57600080fd5b505af11580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e79190611b45565b50505b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb90604401602060405180830381600087803b15801561123457600080fd5b505af1158015611248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126c9190611b45565b506001600160a01b03841663a9059cbb7fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef5460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260248101889052604401602060405180830381600087803b1580156112e657600080fd5b505af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e9190611b45565b50505050505050505050565b6040805160608082018352600080835260208084018290528385018390528682527f9640cafb40b0879c549f0d3e684f5f0bfa30b9c382b1706036c49f78210d365a815284822060ff878116845290825291859020855193840186528054845260018101549092161515908301526002810180549394929391928401916113b090611df0565b80601f01602080910402602001604051908101604052809291908181526020018280546113dc90611df0565b80156114295780601f106113fe57610100808354040283529160200191611429565b820191906000526020600020905b81548152906001019060200180831161140c57829003601f168201915b505050505081525050905092915050565b606060006114478361167a565b600101905060008167ffffffffffffffff81111561146757611467611779565b6040519080825280601f01601f191660200182016040528015611491576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114ca576114cf565b61149b565b509392505050565b606060006114e6836002611c76565b6114f1906002611baa565b67ffffffffffffffff81111561150957611509611779565b6040519080825280601f01601f191660200182016040528015611533576020820181803683370190505b509050600360fc1b8160008151811061154e5761154e611e2b565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061157d5761157d611e2b565b60200101906001600160f81b031916908160001a90535060006115a1846002611c76565b6115ac906001611baa565b90505b6001811115611624576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106115e0576115e0611e2b565b1a60f81b8282815181106115f6576115f6611e2b565b60200101906001600160f81b031916908160001a90535060049490941c9361161d81611e41565b90506115af565b5083156116735760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610328565b9392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116b95772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106116e5576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061170357662386f26fc10000830492506010015b6305f5e100831061171b576305f5e100830492506008015b612710831061172f57612710830492506004015b60648310611741576064830492506002015b600a8310610e6f5760010192915050565b60ff8116811461176157600080fd5b50565b6001600160a01b038116811461176157600080fd5b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117aa576117aa611779565b604051601f8501601f19908116603f011681019082821181831017156117d2576117d2611779565b816040528093508581528686860111156117eb57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261181657600080fd5b6116738383356020850161178f565b60008060008060008060c0878903121561183e57600080fd5b86359550602087013561185081611752565b9450604087013561186081611764565b9350606087013592506080870135915060a087013567ffffffffffffffff81111561188a57600080fd5b61189689828a01611805565b9150509295509295509295565b6000602082840312156118b557600080fd5b813561167381611764565b600080600080600080600080610100898b0312156118dd57600080fd5b8835975060208901356118ef81611752565b965060408901356118ff81611764565b955060608901359450608089013561191681611764565b935060a0890135925060c089013561192d81611764565b915060e089013567ffffffffffffffff81111561194957600080fd5b6119558b828c01611805565b9150509295985092959890939650565b60006020828403121561197757600080fd5b813567ffffffffffffffff81111561198e57600080fd5b61199a84828501611805565b949350505050565b600080600080600060a086880312156119ba57600080fd5b8535945060208601356119cc81611752565b935060408601356119dc81611764565b94979396509394606081013594506080013592915050565b60008060408385031215611a0757600080fd5b823591506020830135611a1981611764565b809150509250929050565b60008060008060808587031215611a3a57600080fd5b843567ffffffffffffffff811115611a5157600080fd5b8501601f81018713611a6257600080fd5b611a718782356020840161178f565b9450506020850135611a8281611752565b93969395505050506040820135916060013590565b60005b83811015611ab2578181015183820152602001611a9a565b83811115611ac1576000848401525b50505050565b6020815260008251806020840152611ae6816040850160208701611a97565b601f01601f19169190910160400192915050565b600060208284031215611b0c57600080fd5b5035919050565b600060208284031215611b2557600080fd5b815161167381611764565b80518015158114611b4057600080fd5b919050565b600060208284031215611b5757600080fd5b61167382611b30565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b8a57611b8a611b60565b5060010190565b600060208284031215611ba357600080fd5b5051919050565b60008219821115611bbd57611bbd611b60565b500190565b600060ff821660ff84168060ff03821115611bdf57611bdf611b60565b019392505050565b60008151611bf9818560208601611a97565b9290920192915050565b60008251611c15818460208701611a97565b9190910192915050565b60008060408385031215611c3257600080fd5b8251611c3d81611752565b9150611c4b60208401611b30565b90509250929050565b600082611c7157634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9057611c90611b60565b500290565b600082821015611ca757611ca7611b60565b500390565b60008351611cbe818460208801611a97565b835190830190611cd2818360208801611a97565b01949350505050565b7f4369636c656f204272696467656420537562736372697074696f6e0a0a436861815263034b71d160e51b602082015260008751611d20816024850160208c01611a97565b6552ab9b2b91d160cd1b6024918401918201528751611d4681602b840160208c01611a97565b6b529bab126b0b730b3b2b91d1609d1b602b92909101918201528651611d73816038840160208b01611a97565b6d529bab139b1b934b83a34b7b71d1608d1b603892909101918201528551611da2816047840160208a01611a97565b665283934b1b29d160c51b60479290910191820152611de3611ddd611dca604f840188611be7565b6652737b731b29d160c51b815260080190565b85611be7565b9998505050505050505050565b600181811c90821680611e0457607f821691505b60208210811415611e2557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600081611e5057611e50611b60565b50600019019056feb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40f2a2646970667358221220bb5645d28c2ada57e6eca3658d324e0622376d729416b36889fc1293af6a9b8a64736f6c63430008090033";

type BridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacet__factory extends ContractFactory {
  constructor(...args: BridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacet {
    return super.attach(address) as BridgeFacet;
  }
  override connect(signer: Signer): BridgeFacet__factory {
    return super.connect(signer) as BridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacetInterface {
    return new utils.Interface(_abi) as BridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacet;
  }
}
