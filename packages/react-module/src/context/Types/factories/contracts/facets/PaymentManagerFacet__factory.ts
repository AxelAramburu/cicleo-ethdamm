/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentManagerFacet,
  PaymentManagerFacetInterface,
} from "../../../contracts/facets/PaymentManagerFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "PaymentManagerCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "PaymentManagerOwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "PaymentManagerTokenChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "PaymentManagerTreasuryChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "createPaymentManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ids",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "editPaymentManagerToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ids",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "editPaymentManagerTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
    ],
    name: "getPaymentManagerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "treasuryAccount",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct PaymentManagerData",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "tokenDecimals",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611254806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806305131835146100515780633066f74b14610083578063372991171461009f5780634641d2fc146100bb575b600080fd5b61006b60048036038101906100669190610c7d565b6100d7565b60405161007a93929190610eab565b60405180910390f35b61009d60048036038101906100989190610caa565b6103cf565b005b6100b960048036038101906100b49190610c0e565b61054e565b005b6100d560048036038101906100d09190610caa565b610763565b005b6100df610974565b6000606060006100ed6108e2565b905080600001600086815260200190815260200160002081600001600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561018257600080fd5b505afa158015610196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ba9190610cea565b82600001600088815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561023857600080fd5b505afa15801561024c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906102759190610bc5565b826040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461033d90611084565b80601f016020809104026020016040519081016040528092919081815260200182805461036990611084565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050815250509250935093509350509193909250565b816103d861090f565b73ffffffffffffffffffffffffffffffffffffffff16630e2b5e3133836040518363ffffffff1660e01b8152600401610412929190610e62565b60206040518083038186803b15801561042a57600080fd5b505afa15801561043e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104629190610b98565b6104a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049890610e8b565b60405180910390fd5b60006104ab6108e2565b90508281600001600086815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847fbd92b8b0bb51f52111ef3caa27e8d59a941b0174847b8750486ddb6b2306991060405160405180910390a350505050565b60006105586108e2565b905060006001826001015461056d9190610f73565b905060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018681525082600001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906106759291906109c1565b5090505080826001018190555061068a61090f565b73ffffffffffffffffffffffffffffffffffffffff1663d1194e2b33836040518363ffffffff1660e01b81526004016106c4929190610e62565b600060405180830381600087803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fe4de2de68541c27fc2eb7910a1558fcdaedaef2eb1c9401febabc19b8fbb9eff866040516107549190610e47565b60405180910390a45050505050565b8161076c61090f565b73ffffffffffffffffffffffffffffffffffffffff16630e2b5e3133836040518363ffffffff1660e01b81526004016107a6929190610e62565b60206040518083038186803b1580156107be57600080fd5b505afa1580156107d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f69190610b98565b610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90610e8b565b60405180910390fd5b600061083f6108e2565b90508281600001600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847f3618fb4b1bb52b27d4efc7212769b7db5671d3318027487f5786359d582274c360405160405180910390a350505050565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b60008061091a610947565b90508060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b8280546109cd90611084565b90600052602060002090601f0160209004810192826109ef5760008555610a36565b82601f10610a0857805160ff1916838001178555610a36565b82800160010185558215610a36579182015b82811115610a35578251825591602001919060010190610a1a565b5b509050610a439190610a47565b5090565b5b80821115610a60576000816000905550600101610a48565b5090565b6000610a77610a7284610f15565b610ef0565b905082815260208101848484011115610a9357610a92611179565b5b610a9e848285611042565b509392505050565b6000610ab9610ab484610f15565b610ef0565b905082815260208101848484011115610ad557610ad4611179565b5b610ae0848285611051565b509392505050565b600081359050610af7816111c2565b92915050565b600081519050610b0c816111d9565b92915050565b600082601f830112610b2757610b26611174565b5b8135610b37848260208601610a64565b91505092915050565b600082601f830112610b5557610b54611174565b5b8151610b65848260208601610aa6565b91505092915050565b600081359050610b7d816111f0565b92915050565b600081519050610b9281611207565b92915050565b600060208284031215610bae57610bad611183565b5b6000610bbc84828501610afd565b91505092915050565b600060208284031215610bdb57610bda611183565b5b600082015167ffffffffffffffff811115610bf957610bf861117e565b5b610c0584828501610b40565b91505092915050565b600080600060608486031215610c2757610c26611183565b5b600084013567ffffffffffffffff811115610c4557610c4461117e565b5b610c5186828701610b12565b9350506020610c6286828701610ae8565b9250506040610c7386828701610ae8565b9150509250925092565b600060208284031215610c9357610c92611183565b5b6000610ca184828501610b6e565b91505092915050565b60008060408385031215610cc157610cc0611183565b5b6000610ccf85828601610b6e565b9250506020610ce085828601610ae8565b9150509250929050565b600060208284031215610d0057610cff611183565b5b6000610d0e84828501610b83565b91505092915050565b610d2081610fc9565b82525050565b610d2f81610fc9565b82525050565b610d3e8161101e565b82525050565b6000610d4f82610f46565b610d598185610f51565b9350610d69818560208601611051565b610d7281611188565b840191505092915050565b6000610d8882610f46565b610d928185610f62565b9350610da2818560208601611051565b610dab81611188565b840191505092915050565b6000610dc3600983610f62565b9150610dce82611199565b602082019050919050565b6000606083016000830151610df16000860182610d17565b506020830151610e046020860182610d35565b5060408301518482036040860152610e1c8282610d44565b9150508091505092915050565b610e3281611007565b82525050565b610e4181611011565b82525050565b6000602082019050610e5c6000830184610d26565b92915050565b6000604082019050610e776000830185610d26565b610e846020830184610e29565b9392505050565b60006020820190508181036000830152610ea481610db6565b9050919050565b60006060820190508181036000830152610ec58186610dd9565b9050610ed46020830185610e38565b8181036040830152610ee68184610d7d565b9050949350505050565b6000610efa610f0b565b9050610f0682826110b6565b919050565b6000604051905090565b600067ffffffffffffffff821115610f3057610f2f611145565b5b610f3982611188565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f7e82611007565b9150610f8983611007565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fbe57610fbd6110e7565b5b828201905092915050565b6000610fd482610fe7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061102982611030565b9050919050565b600061103b82610fe7565b9050919050565b82818337600083830152505050565b60005b8381101561106f578082015181840152602081019050611054565b8381111561107e576000848401525b50505050565b6000600282049050600182168061109c57607f821691505b602082108114156110b0576110af611116565b5b50919050565b6110bf82611188565b810181811067ffffffffffffffff821117156110de576110dd611145565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6111cb81610fc9565b81146111d657600080fd5b50565b6111e281610fdb565b81146111ed57600080fd5b50565b6111f981611007565b811461120457600080fd5b50565b61121081611011565b811461121b57600080fd5b5056fea2646970667358221220dad02f8bb8130d6dba4734dc76c3455c8d64bb17768d732f85ff265f99d3078964736f6c63430008060033";

type PaymentManagerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentManagerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentManagerFacet__factory extends ContractFactory {
  constructor(...args: PaymentManagerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentManagerFacet> {
    return super.deploy(overrides || {}) as Promise<PaymentManagerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentManagerFacet {
    return super.attach(address) as PaymentManagerFacet;
  }
  override connect(signer: Signer): PaymentManagerFacet__factory {
    return super.connect(signer) as PaymentManagerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentManagerFacetInterface {
    return new utils.Interface(_abi) as PaymentManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as PaymentManagerFacet;
  }
}
