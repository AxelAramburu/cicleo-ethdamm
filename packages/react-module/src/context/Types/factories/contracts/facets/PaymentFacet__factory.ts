/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentFacet,
  PaymentFacetInterface,
} from "../../../contracts/facets/PaymentFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentDoneWithCicleo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "PaymentManagerCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "getRouterSwap",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
    ],
    name: "payWithCicleo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        internalType: "contract IOpenOceanCaller",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guaranteedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IOpenOceanCaller.CallDescription[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "payWithCicleoWithSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRouter",
        name: "routerSwap",
        type: "address",
      },
    ],
    name: "setRouterSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611d9f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ebe49d146100515780634281ba6f1461006d57806370a86d851461008b578063f2517fb2146100a7575b600080fd5b61006b60048036038101906100669190611132565b6100c3565b005b610075610485565b604051610082919061165f565b60405180910390f35b6100a560048036038101906100a09190611064565b6104bd565b005b6100c160048036038101906100bc91906110be565b610518565b005b60006100ce89610620565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013b906116da565b60405180910390fd5b610157338560000151866080015161079a565b6000610161610485565b9050846000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38287608001516040518363ffffffff1660e01b81526004016101a69291906115ef565b602060405180830381600087803b1580156101c057600080fd5b505af11580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f89190611037565b506000856020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610238919061159d565b60206040518083038186803b15801561025057600080fd5b505afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190611091565b90508173ffffffffffffffffffffffffffffffffffffffff166390411a32888888886040518563ffffffff1660e01b81526004016102c99493929190611618565b602060405180830381600087803b1580156102e357600080fd5b505af11580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190611091565b506000866020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161035b919061159d565b60206040518083038186803b15801561037357600080fd5b505afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190611091565b90508a82826103ba919061194e565b10156103fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f29061169a565b60405180910390fd5b6104058c8c610993565b8989604051610415929190611584565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff168d7f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78585610462919061194e565b60405161046f91906116fa565b60405180910390a4505050505050505050505050565b600080610490610b7c565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6104c5610ba9565b60006104cf610b7c565b9050818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600061052385610620565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610599576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610590906116da565b60405180910390fd5b6105a83382602001518661079a565b6105b28585610993565b82826040516105c2929190611584565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff16867f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78760405161061191906116fa565b60405180910390a45050505050565b610628610d29565b6000610632610c44565b90508060000160008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461071090611aae565b80601f016020809104026020016040519081016040528092919081815260200182805461073c90611aae565b80156107895780601f1061075e57610100808354040283529160200191610789565b820191906000526020600020905b81548152906001019060200180831161076c57829003601f168201915b505050505081525050915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107d5919061159d565b60206040518083038186803b1580156107ed57600080fd5b505afa158015610801573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108259190611091565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530856040518463ffffffff1660e01b8152600401610864939291906115b8565b602060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b69190611037565b5081816108c3919061186d565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108fc919061159d565b60206040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190611091565b101561098d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610984906116ba565b60405180910390fd5b50505050565b600061099e83610620565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610a14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0b906116da565b60405180910390fd5b60006103e8610a21610c71565b61ffff1684610a3091906118f4565b610a3a91906118c3565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518386610a6d919061194e565b6040518363ffffffff1660e01b8152600401610a8a9291906115ef565b602060405180830381600087803b158015610aa457600080fd5b505af1158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190611037565b50816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610b05610c97565b836040518363ffffffff1660e01b8152600401610b239291906115ef565b602060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611037565b5050505050565b6000807fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef90508091505090565b610bb1610ccf565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c399061167a565b60405180910390fd5b565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b600080610c7c610cfc565b90508060010160149054906101000a900461ffff1691505090565b600080610ca2610cfc565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b6000610d89610d848461173a565b611715565b905082815260208101848484011115610da557610da4611bf0565b5b610db0848285611a6c565b509392505050565b600081359050610dc781611cdf565b92915050565b60008083601f840112610de357610de2611bd7565b5b8235905067ffffffffffffffff811115610e0057610dff611bd2565b5b602083019150836020820283011115610e1c57610e1b611beb565b5b9250929050565b600081519050610e3281611cf6565b92915050565b600082601f830112610e4d57610e4c611bd7565b5b8135610e5d848260208601610d76565b91505092915050565b600081359050610e7581611d0d565b92915050565b600081359050610e8a81611d24565b92915050565b600081359050610e9f81611d3b565b92915050565b60008083601f840112610ebb57610eba611bd7565b5b8235905067ffffffffffffffff811115610ed857610ed7611bd2565b5b602083019150836001820283011115610ef457610ef3611beb565b5b9250929050565b60006101408284031215610f1257610f11611bdc565b5b610f1d610140611715565b90506000610f2d84828501610e66565b6000830152506020610f4184828501610e66565b6020830152506040610f5584828501610db8565b6040830152506060610f6984828501610db8565b6060830152506080610f7d8482850161100d565b60808301525060a0610f918482850161100d565b60a08301525060c0610fa58482850161100d565b60c08301525060e0610fb98482850161100d565b60e083015250610100610fce84828501610db8565b6101008301525061012082013567ffffffffffffffff811115610ff457610ff3611be6565b5b61100084828501610e38565b6101208301525092915050565b60008135905061101c81611d52565b92915050565b60008151905061103181611d52565b92915050565b60006020828403121561104d5761104c611bff565b5b600061105b84828501610e23565b91505092915050565b60006020828403121561107a57611079611bff565b5b600061108884828501610e90565b91505092915050565b6000602082840312156110a7576110a6611bff565b5b60006110b584828501611022565b91505092915050565b600080600080606085870312156110d8576110d7611bff565b5b60006110e68782880161100d565b94505060206110f78782880161100d565b935050604085013567ffffffffffffffff81111561111857611117611bf5565b5b61112487828801610ea5565b925092505092959194509250565b60008060008060008060008060c0898b03121561115257611151611bff565b5b60006111608b828c0161100d565b98505060206111718b828c0161100d565b975050604089013567ffffffffffffffff81111561119257611191611bf5565b5b61119e8b828c01610ea5565b965096505060606111b18b828c01610e7b565b945050608089013567ffffffffffffffff8111156111d2576111d1611bf5565b5b6111de8b828c01610efb565b93505060a089013567ffffffffffffffff8111156111ff576111fe611bf5565b5b61120b8b828c01610dcd565b92509250509295985092959890939650565b60006112298383611407565b905092915050565b61123a81611982565b82525050565b61124981611982565b82525050565b600061125b838561178d565b93508360208402850161126d8461176b565b8060005b878110156112b1578484038952611288828461182e565b611292858261121d565b945061129d83611780565b925060208a01995050600181019050611271565b50829750879450505050509392505050565b60006112cf838561179e565b93506112dc838584611a6c565b6112e583611c04565b840190509392505050565b60006112fb82611775565b611305818561179e565b9350611315818560208601611a7b565b61131e81611c04565b840191505092915050565b61133281611a00565b82525050565b61134181611a24565b82525050565b61135081611a48565b82525050565b600061136283856117c0565b935061136f838584611a6c565b82840190509392505050565b60006113886022836117af565b915061139382611c15565b604082019050919050565b60006113ab600b836117af565b91506113b682611c64565b602082019050919050565b60006113ce600f836117af565b91506113d982611c8d565b602082019050919050565b60006113f1600f836117af565b91506113fc82611cb6565b602082019050919050565b60006080830161141a6000840184611856565b6114276000860182611566565b506114356020840184611856565b6114426020860182611566565b506114506040840184611856565b61145d6040860182611566565b5061146b60608401846117cb565b858303606087015261147e8382846112c3565b925050508091505092915050565b6000610140830160008301516114a56000860182611329565b5060208301516114b86020860182611329565b5060408301516114cb6040860182611231565b5060608301516114de6060860182611231565b5060808301516114f16080860182611566565b5060a083015161150460a0860182611566565b5060c083015161151760c0860182611566565b5060e083015161152a60e0860182611566565b5061010083015161153f610100860182611231565b5061012083015184820361012086015261155982826112f0565b9150508091505092915050565b61156f816119f6565b82525050565b61157e816119f6565b82525050565b6000611591828486611356565b91508190509392505050565b60006020820190506115b26000830184611240565b92915050565b60006060820190506115cd6000830186611240565b6115da6020830185611240565b6115e76040830184611575565b949350505050565b60006040820190506116046000830185611240565b6116116020830184611575565b9392505050565b600060608201905061162d6000830187611338565b818103602083015261163f818661148c565b9050818103604083015261165481848661124f565b905095945050505050565b60006020820190506116746000830184611347565b92915050565b600060208201905081810360008301526116938161137b565b9050919050565b600060208201905081810360008301526116b38161139e565b9050919050565b600060208201905081810360008301526116d3816113c1565b9050919050565b600060208201905081810360008301526116f3816113e4565b9050919050565b600060208201905061170f6000830184611575565b92915050565b600061171f611730565b905061172b8282611ae0565b919050565b6000604051905090565b600067ffffffffffffffff82111561175557611754611b9e565b5b61175e82611c04565b9050602081019050919050565b6000819050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600080833560016020038436030381126117e8576117e7611bfa565b5b83810192508235915060208301925067ffffffffffffffff8211156118105761180f611bcd565b5b60018202360384131561182657611825611be1565b5b509250929050565b60008235600160800383360303811261184a57611849611bfa565b5b82810191505092915050565b6000611865602084018461100d565b905092915050565b6000611878826119f6565b9150611883836119f6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118b8576118b7611b11565b5b828201905092915050565b60006118ce826119f6565b91506118d9836119f6565b9250826118e9576118e8611b40565b5b828204905092915050565b60006118ff826119f6565b915061190a836119f6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561194357611942611b11565b5b828202905092915050565b6000611959826119f6565b9150611964836119f6565b92508282101561197757611976611b11565b5b828203905092915050565b600061198d826119d6565b9050919050565b60008115159050919050565b60006119ab82611982565b9050919050565b60006119bd82611982565b9050919050565b60006119cf82611982565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611a0b82611a12565b9050919050565b6000611a1d826119d6565b9050919050565b6000611a2f82611a36565b9050919050565b6000611a41826119d6565b9050919050565b6000611a5382611a5a565b9050919050565b6000611a65826119d6565b9050919050565b82818337600083830152505050565b60005b83811015611a99578082015181840152602081019050611a7e565b83811115611aa8576000848401525b50505050565b60006002820490506001821680611ac657607f821691505b60208210811415611ada57611ad9611b6f565b5b50919050565b611ae982611c04565b810181811067ffffffffffffffff82111715611b0857611b07611b9e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b7f53776170206661696c6564000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e76616c696420737562696e666f0000000000000000000000000000000000600082015250565b611ce881611982565b8114611cf357600080fd5b50565b611cff81611994565b8114611d0a57600080fd5b50565b611d16816119a0565b8114611d2157600080fd5b50565b611d2d816119b2565b8114611d3857600080fd5b50565b611d44816119c4565b8114611d4f57600080fd5b50565b611d5b816119f6565b8114611d6657600080fd5b5056fea2646970667358221220078da5deb399af0cd2901834dc75f15a055ac1b5509e4a35ca2ef0728af3e06464736f6c63430008060033";

type PaymentFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentFacet__factory extends ContractFactory {
  constructor(...args: PaymentFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentFacet> {
    return super.deploy(overrides || {}) as Promise<PaymentFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentFacet {
    return super.attach(address) as PaymentFacet;
  }
  override connect(signer: Signer): PaymentFacet__factory {
    return super.connect(signer) as PaymentFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentFacetInterface {
    return new utils.Interface(_abi) as PaymentFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentFacet {
    return new Contract(address, _abi, signerOrProvider) as PaymentFacet;
  }
}
