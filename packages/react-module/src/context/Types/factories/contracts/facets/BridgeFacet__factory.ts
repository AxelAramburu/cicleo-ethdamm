/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeFacet,
  BridgeFacetInterface,
} from "../../../contracts/facets/BridgeFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentDoneWithCicleo",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentManagerId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct PaymentParameters",
        name: "paymentParams",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "bridgePayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506122bc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063d271d6e411610066578063d271d6e414610134578063d2c3fbb714610164578063d9ff430514610194578063ea745099146101c4578063fa540801146101f457610093565b806309ac248e14610098578063564b81ef146100b45780636834e3a8146100d2578063a7bb580314610102575b600080fd5b6100b260048036038101906100ad9190611479565b610224565b005b6100bc6103e0565b6040516100c99190611b77565b60405180910390f35b6100ec60048036038101906100e79190611326565b6103ed565b6040516100f99190611b77565b60405180910390f35b61011c600480360381019061011791906113ad565b61043f565b60405161012b93929190611a59565b60405180910390f35b61014e60048036038101906101499190611504565b6104c3565b60405161015b9190611ad5565b60405180910390f35b61017e600480360381019061017991906113f6565b610547565b60405161018b91906119a8565b60405180910390f35b6101ae60048036038101906101a99190611504565b6106f6565b6040516101bb9190611a3e565b60405180910390f35b6101de60048036038101906101d9919061159b565b610736565b6040516101eb9190611a23565b60405180910390f35b61020e60048036038101906102099190611380565b6107a6565b60405161021b9190611a3e565b60405180910390f35b6102868360200151838560400151866060015161023f6107d6565b60000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205486610736565b6102c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bc90611b17565b60405180910390fd5b60006102d48460200151610803565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd333087604001516040518463ffffffff1660e01b8152600401610317939291906119c3565b602060405180830381600087803b15801561033157600080fd5b505af1158015610345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103699190611353565b506103726107d6565b60000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906103c390611ecc565b91905055506103da84602001518560400151610851565b50505050565b6000804690508091505090565b60006103f76107d6565b60000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060006041845114610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611b37565b60405180910390fd5b6020840151925060408401519150606084015160001a9050601b8160ff1610156104bc57601b816104b99190611c96565b90505b9193909250565b606060006104cf6103e0565b90506104da81610a3a565b6104fb8773ffffffffffffffffffffffffffffffffffffffff166014610b12565b61050489610a3a565b8661050e89610a3a565b61051788610a3a565b60405160200161052c9695949392919061190e565b60405160208183030381529060405291505095945050505050565b6000806040518060400160405280602081526020017f19457468657265756d205369676e6564204d6573736167653a0a303030303030815250905060008087519050603983019150620f423f81111561059f57600080fd5b600080620186a090505b6000811461064557600081846105bf9190611ccd565b905060008114156105e95760008314156105e857600a826105e09190611ccd565b9150506105a9565b5b82806105f490611ecc565b93505081816106039190611cfe565b8461060e9190611d58565b9350600a8261061d9190611ccd565b915060308161062c9190611c40565b9050848061063990611ecc565b955050808553506105a9565b600082141561065757601b9150610667565b601a826106649190611c40565b91505b8185526000858b60405160200161067f9291906118c4565b6040516020818303038152906040528051906020012090506001818b8b8b604051600081526020016040526040516106ba9493929190611a90565b6020604051602081039080840390855afa1580156106dc573d6000803e3d6000fd5b505050602060405103519650505050505050949350505050565b600061070586868686866104c3565b60405160200161071591906118ad565b60405160208183030381529060405280519060200120905095945050505050565b60008061074688888888886104c3565b905060008060006107568661043f565b9250925092508973ffffffffffffffffffffffffffffffffffffffff1661077f85838686610547565b73ffffffffffffffffffffffffffffffffffffffff16149450505050509695505050505050565b6000816040516020016107b991906118e8565b604051602081830303815290604052805190602001209050919050565b6000807faac8aff6168086bf0ebba85245f7ec7b3821eb78fcc9bef2b675e60b9384ed2990508091505090565b60008061080e610d4e565b905080600001600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600061085c83610d7b565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614156108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990611b57565b60405180910390fd5b60006103e86108df610ef5565b61ffff16846108ee9190611cfe565b6108f89190611ccd565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360000151838661092b9190611d58565b6040518363ffffffff1660e01b81526004016109489291906119fa565b602060405180830381600087803b15801561096257600080fd5b505af1158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a9190611353565b50816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6109c3610f1b565b836040518363ffffffff1660e01b81526004016109e19291906119fa565b602060405180830381600087803b1580156109fb57600080fd5b505af1158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190611353565b5050505050565b606060006001610a4984610f53565b01905060008167ffffffffffffffff811115610a6857610a67611fdb565b5b6040519080825280601f01601f191660200182016040528015610a9a5781602001600182028036833780820191505090505b509050600082602001820190505b600115610b07578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610af157610af0611f4e565b5b0494506000851415610b0257610b07565b610aa8565b819350505050919050565b606060006002836002610b259190611cfe565b610b2f9190611c40565b67ffffffffffffffff811115610b4857610b47611fdb565b5b6040519080825280601f01601f191660200182016040528015610b7a5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610bb257610bb1611fac565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c1657610c15611fac565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610c569190611cfe565b610c609190611c40565b90505b6001811115610d00577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610ca257610ca1611fac565b5b1a60f81b828281518110610cb957610cb8611fac565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610cf990611e3f565b9050610c63565b5060008414610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b90611af7565b60405180910390fd5b8091505092915050565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b610d836110d3565b6000610d8d610d4e565b90508060000160008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610e6b90611e69565b80601f0160208091040260200160405190810160405280929190818152602001828054610e9790611e69565b8015610ee45780601f10610eb957610100808354040283529160200191610ee4565b820191906000526020600020905b815481529060010190602001808311610ec757829003601f168201915b505050505081525050915050919050565b600080610f006110a6565b90508060010160149054906101000a900461ffff1691505090565b600080610f266110a6565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610fb1577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381610fa757610fa6611f4e565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310610fee576d04ee2d6d415b85acef81000000008381610fe457610fe3611f4e565b5b0492506020810190505b662386f26fc10000831061101d57662386f26fc10000838161101357611012611f4e565b5b0492506010810190505b6305f5e1008310611046576305f5e100838161103c5761103b611f4e565b5b0492506008810190505b612710831061106b57612710838161106157611060611f4e565b5b0492506004810190505b6064831061108e576064838161108457611083611f4e565b5b0492506002810190505b600a831061109d576001810190505b80915050919050565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b600061113361112e84611bb7565b611b92565b90508281526020810184848401111561114f5761114e612019565b5b61115a848285611dfd565b509392505050565b600061117561117084611be8565b611b92565b90508281526020810184848401111561119157611190612019565b5b61119c848285611dfd565b509392505050565b6000813590506111b3816121fc565b92915050565b6000815190506111c881612213565b92915050565b6000813590506111dd8161222a565b92915050565b600082601f8301126111f8576111f761200a565b5b8135611208848260208601611120565b91505092915050565b60008135905061122081612241565b92915050565b600082601f83011261123b5761123a61200a565b5b813561124b848260208601611162565b91505092915050565b600060a0828403121561126a5761126961200f565b5b61127460a0611b92565b90506000611284848285016112fc565b6000830152506020611298848285016112fc565b60208301525060406112ac848285016112fc565b604083015250606082013567ffffffffffffffff8111156112d0576112cf612014565b5b6112dc84828501611226565b60608301525060806112f084828501611211565b60808301525092915050565b60008135905061130b81612258565b92915050565b6000813590506113208161226f565b92915050565b60006020828403121561133c5761133b612023565b5b600061134a848285016111a4565b91505092915050565b60006020828403121561136957611368612023565b5b6000611377848285016111b9565b91505092915050565b60006020828403121561139657611395612023565b5b60006113a4848285016111ce565b91505092915050565b6000602082840312156113c3576113c2612023565b5b600082013567ffffffffffffffff8111156113e1576113e061201e565b5b6113ed848285016111e3565b91505092915050565b600080600080608085870312156114105761140f612023565b5b600085013567ffffffffffffffff81111561142e5761142d61201e565b5b61143a87828801611226565b945050602061144b87828801611311565b935050604061145c878288016111ce565b925050606061146d878288016111ce565b91505092959194509250565b60008060006060848603121561149257611491612023565b5b600084013567ffffffffffffffff8111156114b0576114af61201e565b5b6114bc86828701611254565b93505060206114cd868287016111a4565b925050604084013567ffffffffffffffff8111156114ee576114ed61201e565b5b6114fa868287016111e3565b9150509250925092565b600080600080600060a086880312156115205761151f612023565b5b600061152e888289016112fc565b955050602061153f888289016111a4565b9450506040611550888289016112fc565b935050606086013567ffffffffffffffff8111156115715761157061201e565b5b61157d88828901611226565b925050608061158e888289016112fc565b9150509295509295909350565b60008060008060008060c087890312156115b8576115b7612023565b5b60006115c689828a016112fc565b96505060206115d789828a016111a4565b95505060406115e889828a016112fc565b945050606087013567ffffffffffffffff8111156116095761160861201e565b5b61161589828a01611226565b935050608061162689828a016112fc565b92505060a087013567ffffffffffffffff8111156116475761164661201e565b5b61165389828a016111e3565b9150509295509295509295565b61166981611d8c565b82525050565b61167881611d9e565b82525050565b61168781611daa565b82525050565b61169e61169982611daa565b611f15565b82525050565b60006116af82611c19565b6116b98185611c24565b93506116c9818560208601611e0c565b6116d281612028565b840191505092915050565b60006116e882611c19565b6116f28185611c35565b9350611702818560208601611e0c565b80840191505092915050565b600061171b602083611c24565b915061172682612039565b602082019050919050565b600061173e601283611c35565b915061174982612062565b601282019050919050565b6000611761601183611c24565b915061176c8261208b565b602082019050919050565b6000611784600783611c35565b915061178f826120b4565b600782019050919050565b60006117a7600883611c35565b91506117b2826120dd565b600882019050919050565b60006117ca602083611c35565b91506117d582612106565b602082019050919050565b60006117ed600783611c35565b91506117f88261212f565b600782019050919050565b6000611810601883611c24565b915061181b82612158565b602082019050919050565b6000611833600883611c35565b915061183e82612181565b600882019050919050565b6000611856602083611c35565b9150611861826121aa565b602082019050919050565b6000611879600f83611c24565b9150611884826121d3565b602082019050919050565b61189881611de6565b82525050565b6118a781611df0565b82525050565b60006118b982846116dd565b915081905092915050565b60006118d082856116dd565b91506118dc82846116dd565b91508190509392505050565b60006118f3826117bd565b91506118ff828461168d565b60208201915081905092915050565b600061191982611849565b915061192582896116dd565b915061193082611777565b915061193c82886116dd565b915061194782611731565b915061195382876116dd565b915061195e826117e0565b915061196a82866116dd565b915061197582611826565b915061198182856116dd565b915061198c8261179a565b915061199882846116dd565b9150819050979650505050505050565b60006020820190506119bd6000830184611660565b92915050565b60006060820190506119d86000830186611660565b6119e56020830185611660565b6119f2604083018461188f565b949350505050565b6000604082019050611a0f6000830185611660565b611a1c602083018461188f565b9392505050565b6000602082019050611a38600083018461166f565b92915050565b6000602082019050611a53600083018461167e565b92915050565b6000606082019050611a6e600083018661167e565b611a7b602083018561167e565b611a88604083018461189e565b949350505050565b6000608082019050611aa5600083018761167e565b611ab2602083018661189e565b611abf604083018561167e565b611acc606083018461167e565b95945050505050565b60006020820190508181036000830152611aef81846116a4565b905092915050565b60006020820190508181036000830152611b108161170e565b9050919050565b60006020820190508181036000830152611b3081611754565b9050919050565b60006020820190508181036000830152611b5081611803565b9050919050565b60006020820190508181036000830152611b708161186c565b9050919050565b6000602082019050611b8c600083018461188f565b92915050565b6000611b9c611bad565b9050611ba88282611e9b565b919050565b6000604051905090565b600067ffffffffffffffff821115611bd257611bd1611fdb565b5b611bdb82612028565b9050602081019050919050565b600067ffffffffffffffff821115611c0357611c02611fdb565b5b611c0c82612028565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000611c4b82611de6565b9150611c5683611de6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611c8b57611c8a611f1f565b5b828201905092915050565b6000611ca182611df0565b9150611cac83611df0565b92508260ff03821115611cc257611cc1611f1f565b5b828201905092915050565b6000611cd882611de6565b9150611ce383611de6565b925082611cf357611cf2611f4e565b5b828204905092915050565b6000611d0982611de6565b9150611d1483611de6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d4d57611d4c611f1f565b5b828202905092915050565b6000611d6382611de6565b9150611d6e83611de6565b925082821015611d8157611d80611f1f565b5b828203905092915050565b6000611d9782611dc6565b9050919050565b60008115159050919050565b6000819050919050565b6000611dbf82611d8c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611e2a578082015181840152602081019050611e0f565b83811115611e39576000848401525b50505050565b6000611e4a82611de6565b91506000821415611e5e57611e5d611f1f565b5b600182039050919050565b60006002820490506001821680611e8157607f821691505b60208210811415611e9557611e94611f7d565b5b50919050565b611ea482612028565b810181811067ffffffffffffffff82111715611ec357611ec2611fdb565b5b80604052505050565b6000611ed782611de6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f0a57611f09611f1f565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f0a5061796d656e74204d616e616765723a200000000000000000000000000000600082015250565b7f496e76616c6964207369676e6174757265000000000000000000000000000000600082015250565b7f0a557365723a2000000000000000000000000000000000000000000000000000600082015250565b7f0a4e6f6e63653a20000000000000000000000000000000000000000000000000600082015250565b7f19457468657265756d205369676e6564204d6573736167653a0a303030303030600082015250565b7f0a4e616d653a2000000000000000000000000000000000000000000000000000600082015250565b7f696e76616c6964207369676e6174757265206c656e6774680000000000000000600082015250565b7f0a50726963653a20000000000000000000000000000000000000000000000000600082015250565b7f4369636c656f2042726964676564205061796d656e74730a0a436861696e3a20600082015250565b7f496e76616c696420737562696e666f0000000000000000000000000000000000600082015250565b61220581611d8c565b811461221057600080fd5b50565b61221c81611d9e565b811461222757600080fd5b50565b61223381611daa565b811461223e57600080fd5b50565b61224a81611db4565b811461225557600080fd5b50565b61226181611de6565b811461226c57600080fd5b50565b61227881611df0565b811461228357600080fd5b5056fea2646970667358221220227821da486957c059293fa4c6ba0fac2b8a0ea960d2ac8aecf04c5aecccb50b64736f6c63430008060033";

type BridgeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacet__factory extends ContractFactory {
  constructor(...args: BridgeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacet> {
    return super.deploy(overrides || {}) as Promise<BridgeFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacet {
    return super.attach(address) as BridgeFacet;
  }
  override connect(signer: Signer): BridgeFacet__factory {
    return super.connect(signer) as BridgeFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacetInterface {
    return new utils.Interface(_abi) as BridgeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacet {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacet;
  }
}
