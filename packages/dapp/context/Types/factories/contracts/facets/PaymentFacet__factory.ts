/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PaymentFacet,
  PaymentFacetInterface,
} from "../../../contracts/facets/PaymentFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PaymentDoneWithCicleo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "treasuryAccount",
        type: "address",
      },
    ],
    name: "PaymentManagerCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "getRouterSwap",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
    ],
    name: "payWithCicleo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "paymentManagerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "nameOfPayment",
        type: "string",
      },
      {
        internalType: "contract IOpenOceanCaller",
        name: "executor",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "srcReceiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "guaranteedAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "referrer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct SwapDescription",
        name: "desc",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "target",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IOpenOceanCaller.CallDescription[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "payWithCicleoWithSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611ac7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ebe49d146100465780634281ba6f14610062578063f2517fb214610080575b600080fd5b610060600480360381019061005b9190610f76565b61009c565b005b61006a610454565b6040516100779190611480565b60405180910390f35b61009a60048036038101906100959190610f02565b61048c565b005b60006100a789610594565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16141561011d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610114906114db565b60405180910390fd5b61013033856000015186608001516106d2565b600061013a610454565b9050846000015173ffffffffffffffffffffffffffffffffffffffff1663095ea7b38287608001516040518363ffffffff1660e01b815260040161017f929190611410565b602060405180830381600087803b15801561019957600080fd5b505af11580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610ea8565b506000856020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161021191906113be565b60206040518083038186803b15801561022957600080fd5b505afa15801561023d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102619190610ed5565b90508173ffffffffffffffffffffffffffffffffffffffff166390411a32888888886040518563ffffffff1660e01b81526004016102a29493929190611439565b602060405180830381600087803b1580156102bc57600080fd5b505af11580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610ed5565b506000866020015173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161033491906113be565b60206040518083038186803b15801561034c57600080fd5b505afa158015610360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103849190610ed5565b90508a8282610393919061174f565b10156103d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cb9061149b565b60405180910390fd5b89896040516103e49291906113a5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff168d7f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78585610431919061174f565b60405161043e91906114fb565b60405180910390a4505050505050505050505050565b60008061045f6108cb565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b600061049785610594565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16141561050d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610504906114db565b60405180910390fd5b61051c338260200151866106d2565b61052685856108f8565b82826040516105369291906113a5565b60405180910390203373ffffffffffffffffffffffffffffffffffffffff16867f2f5f2ee5aa57a7095e4d595ee43379ebe9db86f64a35c08ec2b2f345564c52c78760405161058591906114fb565b60405180910390a45050505050565b61059c610b99565b60006105a6610ae1565b90508060000160008481526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161070d91906113be565b60206040518083038186803b15801561072557600080fd5b505afa158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190610ed5565b90508273ffffffffffffffffffffffffffffffffffffffff166323b872dd8530856040518463ffffffff1660e01b815260040161079c939291906113d9565b602060405180830381600087803b1580156107b657600080fd5b505af11580156107ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ee9190610ea8565b5081816107fb919061166e565b8373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161083491906113be565b60206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108849190610ed5565b10156108c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bc906114bb565b60405180910390fd5b50505050565b6000807fb614cc20afefd276f60a08638fc53c1ea3092f7f93df945b3977c828850a40ef90508091505090565b600061090383610594565b9050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff161415610979576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610970906114db565b60405180910390fd5b60006103e8610986610b0e565b61ffff168461099591906116f5565b61099f91906116c4565b9050816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb836000015183866109d2919061174f565b6040518363ffffffff1660e01b81526004016109ef929190611410565b602060405180830381600087803b158015610a0957600080fd5b505af1158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190610ea8565b50816020015173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610a6a610b34565b836040518363ffffffff1660e01b8152600401610a88929190611410565b602060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ada9190610ea8565b5050505050565b6000807fd99b573b44155c1da097fb84c2f030c9f8daa830c708ef6625b3e30f7ba2234e90508091505090565b600080610b19610b6c565b90508060010160149054906101000a900461ffff1691505090565b600080610b3f610b6c565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6000807fd8f6e013ff0cbc66ded25851d52c18673042e44ec585aeabfa2e9126bad1f74e90508091505090565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000610c0f610c0a8461153b565b611516565b905082815260208101848484011115610c2b57610c2a61197e565b5b610c3684828561185b565b509392505050565b600081359050610c4d81611a1e565b92915050565b60008083601f840112610c6957610c68611965565b5b8235905067ffffffffffffffff811115610c8657610c85611960565b5b602083019150836020820283011115610ca257610ca1611979565b5b9250929050565b600081519050610cb881611a35565b92915050565b600082601f830112610cd357610cd2611965565b5b8135610ce3848260208601610bfc565b91505092915050565b600081359050610cfb81611a4c565b92915050565b600081359050610d1081611a63565b92915050565b60008083601f840112610d2c57610d2b611965565b5b8235905067ffffffffffffffff811115610d4957610d48611960565b5b602083019150836001820283011115610d6557610d64611979565b5b9250929050565b60006101408284031215610d8357610d8261196a565b5b610d8e610140611516565b90506000610d9e84828501610cec565b6000830152506020610db284828501610cec565b6020830152506040610dc684828501610c3e565b6040830152506060610dda84828501610c3e565b6060830152506080610dee84828501610e7e565b60808301525060a0610e0284828501610e7e565b60a08301525060c0610e1684828501610e7e565b60c08301525060e0610e2a84828501610e7e565b60e083015250610100610e3f84828501610c3e565b6101008301525061012082013567ffffffffffffffff811115610e6557610e64611974565b5b610e7184828501610cbe565b6101208301525092915050565b600081359050610e8d81611a7a565b92915050565b600081519050610ea281611a7a565b92915050565b600060208284031215610ebe57610ebd61198d565b5b6000610ecc84828501610ca9565b91505092915050565b600060208284031215610eeb57610eea61198d565b5b6000610ef984828501610e93565b91505092915050565b60008060008060608587031215610f1c57610f1b61198d565b5b6000610f2a87828801610e7e565b9450506020610f3b87828801610e7e565b935050604085013567ffffffffffffffff811115610f5c57610f5b611983565b5b610f6887828801610d16565b925092505092959194509250565b60008060008060008060008060c0898b031215610f9657610f9561198d565b5b6000610fa48b828c01610e7e565b9850506020610fb58b828c01610e7e565b975050604089013567ffffffffffffffff811115610fd657610fd5611983565b5b610fe28b828c01610d16565b96509650506060610ff58b828c01610d01565b945050608089013567ffffffffffffffff81111561101657611015611983565b5b6110228b828c01610d6c565b93505060a089013567ffffffffffffffff81111561104357611042611983565b5b61104f8b828c01610c53565b92509250509295985092959890939650565b600061106d8383611228565b905092915050565b61107e81611783565b82525050565b61108d81611783565b82525050565b600061109f838561158e565b9350836020840285016110b18461156c565b8060005b878110156110f55784840389526110cc828461162f565b6110d68582611061565b94506110e183611581565b925060208a019950506001810190506110b5565b50829750879450505050509392505050565b6000611113838561159f565b935061112083858461185b565b61112983611992565b840190509392505050565b600061113f82611576565b611149818561159f565b935061115981856020860161186a565b61116281611992565b840191505092915050565b611176816117ef565b82525050565b61118581611813565b82525050565b61119481611837565b82525050565b60006111a683856115c1565b93506111b383858461185b565b82840190509392505050565b60006111cc600b836115b0565b91506111d7826119a3565b602082019050919050565b60006111ef600f836115b0565b91506111fa826119cc565b602082019050919050565b6000611212600f836115b0565b915061121d826119f5565b602082019050919050565b60006080830161123b6000840184611657565b6112486000860182611387565b506112566020840184611657565b6112636020860182611387565b506112716040840184611657565b61127e6040860182611387565b5061128c60608401846115cc565b858303606087015261129f838284611107565b925050508091505092915050565b6000610140830160008301516112c6600086018261116d565b5060208301516112d9602086018261116d565b5060408301516112ec6040860182611075565b5060608301516112ff6060860182611075565b5060808301516113126080860182611387565b5060a083015161132560a0860182611387565b5060c083015161133860c0860182611387565b5060e083015161134b60e0860182611387565b50610100830151611360610100860182611075565b5061012083015184820361012086015261137a8282611134565b9150508091505092915050565b611390816117e5565b82525050565b61139f816117e5565b82525050565b60006113b282848661119a565b91508190509392505050565b60006020820190506113d36000830184611084565b92915050565b60006060820190506113ee6000830186611084565b6113fb6020830185611084565b6114086040830184611396565b949350505050565b60006040820190506114256000830185611084565b6114326020830184611396565b9392505050565b600060608201905061144e600083018761117c565b818103602083015261146081866112ad565b90508181036040830152611475818486611093565b905095945050505050565b6000602082019050611495600083018461118b565b92915050565b600060208201905081810360008301526114b4816111bf565b9050919050565b600060208201905081810360008301526114d4816111e2565b9050919050565b600060208201905081810360008301526114f481611205565b9050919050565b60006020820190506115106000830184611396565b92915050565b6000611520611531565b905061152c828261189d565b919050565b6000604051905090565b600067ffffffffffffffff8211156115565761155561192c565b5b61155f82611992565b9050602081019050919050565b6000819050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600080833560016020038436030381126115e9576115e8611988565b5b83810192508235915060208301925067ffffffffffffffff8211156116115761161061195b565b5b6001820236038413156116275761162661196f565b5b509250929050565b60008235600160800383360303811261164b5761164a611988565b5b82810191505092915050565b60006116666020840184610e7e565b905092915050565b6000611679826117e5565b9150611684836117e5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116b9576116b86118ce565b5b828201905092915050565b60006116cf826117e5565b91506116da836117e5565b9250826116ea576116e96118fd565b5b828204905092915050565b6000611700826117e5565b915061170b836117e5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611744576117436118ce565b5b828202905092915050565b600061175a826117e5565b9150611765836117e5565b925082821015611778576117776118ce565b5b828203905092915050565b600061178e826117c5565b9050919050565b60008115159050919050565b60006117ac82611783565b9050919050565b60006117be82611783565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117fa82611801565b9050919050565b600061180c826117c5565b9050919050565b600061181e82611825565b9050919050565b6000611830826117c5565b9050919050565b600061184282611849565b9050919050565b6000611854826117c5565b9050919050565b82818337600083830152505050565b60005b8381101561188857808201518184015260208101905061186d565b83811115611897576000848401525b50505050565b6118a682611992565b810181811067ffffffffffffffff821117156118c5576118c461192c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f53776170206661696c6564000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e76616c696420737562696e666f0000000000000000000000000000000000600082015250565b611a2781611783565b8114611a3257600080fd5b50565b611a3e81611795565b8114611a4957600080fd5b50565b611a55816117a1565b8114611a6057600080fd5b50565b611a6c816117b3565b8114611a7757600080fd5b50565b611a83816117e5565b8114611a8e57600080fd5b5056fea264697066735822122052ad0ad810db000611c49d11528cd816d5c139cecb08cfdf6d6e4898cb17c64964736f6c63430008060033";

type PaymentFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PaymentFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PaymentFacet__factory extends ContractFactory {
  constructor(...args: PaymentFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PaymentFacet> {
    return super.deploy(overrides || {}) as Promise<PaymentFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PaymentFacet {
    return super.attach(address) as PaymentFacet;
  }
  override connect(signer: Signer): PaymentFacet__factory {
    return super.connect(signer) as PaymentFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentFacetInterface {
    return new utils.Interface(_abi) as PaymentFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PaymentFacet {
    return new Contract(address, _abi, signerOrProvider) as PaymentFacet;
  }
}
